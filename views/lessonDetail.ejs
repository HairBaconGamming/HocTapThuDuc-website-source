<%# ========================================================================= %>
<%# EJS Template for Lesson Details Display                                   %>
<%# ========================================================================= %>

<%# Determine mode - Although less relevant for detail page, might be useful for conditional logic if needed %>
<% const currentMode = typeof mode !== 'undefined' ? mode : (lesson ? 'view' : 'error'); %> <%# Default to 'view' if lesson exists %>

<%# Set the page title - Primarily uses lesson title %>
<% const pageTitle = lesson ? lesson.title : 'Chi tiết Bài học'; %>

<%# Include Header: Pass title, user data, and active page identifier %>
<%- include('partials/header', {
    title: pageTitle,
    user: typeof user !== 'undefined' ? user : null,
    activePage: 'subjects' // Or derive from subject/category if needed
}) %>

<%# Link necessary libraries in header or footer %>
<%# CSS for this specific page %>
<link rel="stylesheet" href="/styleLessonDetail.css">
<%# CSS for Prism.js if used %>
<!-- <link href="/path/to/prism-theme.css" rel="stylesheet" /> -->
<%# KaTeX CSS %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.css">

<section class="lesson-detail-page-section">

    <!-- Background Elements -->
    <div class="lesson-detail-background">
        <div class="bg-shape lesson-shape-1"></div>
        <div class="bg-shape lesson-shape-2"></div>
        <div class="bg-lines-subtle"></div>
    </div>

    <div class="container lesson-detail-container">

        <%# Check if lesson data exists %>
        <% if (lesson) { %>

            <!-- Lesson Header -->
            <div class="lesson-detail-header" data-animate="header-fade-in">
                <%
                    let headerIconClass = 'fa-file-alt'; // Default for markdown or unknown
                    if (lesson.type === 'video') headerIconClass = 'fa-video';
                    else if (lesson.type === 'quiz') headerIconClass = 'fa-tasks';
                    else if (lesson.type === 'essay') headerIconClass = 'fa-pen-alt';
                %>
                <div class="lesson-type-icon"><i class="fas <%= headerIconClass %>"></i></div>
                <div class="lesson-title-area">
                    <h1><%= lesson.title %></h1>
                    <div class="lesson-meta-info">
                        <% if (lesson.subject?.name) { %>
                            <span>Môn học: <a href="/subjects/<%= lesson.subject._id %>" class="meta-link loading-link"><%= lesson.subject.name %></a></span> |
                        <% } else { %>
                             <span>Môn học: N/A</span> |
                        <% } %>
                        <% if (lesson.category) { %>
                            <span>Loại: <span class="meta-category"><%= lesson.category %></span></span> |
                        <% } %>
                        <% if (lesson.createdBy?.username) { %>
                            <span>Gửi bởi: <a href="/profile/<%= lesson.createdBy._id %>" class="author-link loading-link"><%= lesson.createdBy.username %></a></span>
                        <% } else { %>
                            <span>Gửi bởi: Admin</span>
                        <% } %>
                        <% if (lesson.type === 'markdown' && lesson.estimatedReadingTime > 0) { %>
                            | <span title="Thời gian đọc ước tính"><i class="far fa-clock"></i> <%= lesson.estimatedReadingTime %> phút</span>
                        <% } %>
                        <% if (lesson.isProOnly) { %>
                            | <span class="pro-badge inline-pro"><i class="fas fa-crown"></i> PRO</span>
                        <% } %>
                    </div>
                </div>
                 <%# Edit/Delete Buttons if owner %>
                 <% if (typeof user !== 'undefined' && user && lesson.createdBy && user._id.toString() === lesson.createdBy._id.toString()) { %>
                     <div class="lesson-owner-actions">
                         <a href="/lesson/<%= lesson._id %>/edit" class="btn btn-icon edit-btn" title="Chỉnh sửa bài học">
                             <i class="fas fa-edit"></i>
                         </a>
                         <form action="/lesson/<%= lesson._id %>/delete?_method=DELETE" method="POST" class="delete-form" onsubmit="return confirm('Bạn có chắc chắn muốn xóa bài học này không? Hành động này không thể hoàn tác.');">
                             <button type="submit" class="btn btn-icon delete-btn" title="Xóa bài học">
                                 <i class="fas fa-trash-alt"></i>
                             </button>
                         </form>
                     </div>
                 <% } %>
            </div>

            <!-- Content Area -->
            <div class="lesson-content-wrapper" data-animate="content-fade-up">

                <%# ==================== MARKDOWN ==================== %>
                <% if (lesson.type === 'markdown') { %>
                <article id="lessonContentV2" class="lesson-content-markdown prose-styling">
                    <% if (lesson.renderedContent && lesson.renderedContent.trim() !== "") { %>
                        <%- lesson.renderedContent %>
                    <% } else { %>
                        <p class="placeholder-text">Nội dung bài học này chưa được cập nhật.</p>
                    <% } %>
                </article>

                <%# ==================== VIDEO ==================== %>
                <% } else if (lesson.type === 'video') { %>
                <div class="lesson-content-video">
                    <% /* Video embedding logic as before */ %>
                    <%
                        let videoUrl = lesson.editorData?.video ?? lesson.content ?? '';
                        let embedUrl = null;
                        if (videoUrl) { try { /* ... URL parsing logic ... */
                             if (videoUrl.includes("youtube.com/watch?v=")) { const vId=new URL(videoUrl).searchParams.get("v"); if(vId) embedUrl = `https://www.youtube.com/embed/${vId}?rel=0`; }
                             else if (videoUrl.includes("youtu.be/")) { const vId=new URL(videoUrl).pathname.split('/')[1]?.split('?')[0]; if(vId) embedUrl = `https://www.youtube.com/embed/${vId}?rel=0`; }
                             else if (videoUrl.includes("vimeo.com/")) { const vId = new URL(videoUrl).pathname.match(/(\d+)/)?.[0]; if(vId) embedUrl = `https://player.vimeo.com/video/${vId}`; }
                             else if (videoUrl.match(/^https?:\/\/.+\.(mp4|webm|ogg)$/i)) { embedUrl = videoUrl; }
                         } catch (e) { embedUrl = null; } }
                    %>
                     <% if (embedUrl) { %>
                        <% if (embedUrl.match(/\.(mp4|webm|ogg)$/i)) { %>
                            <div class="video-embed-wrapper direct-video"><video controls preload="metadata" title="Lesson Video: <%= lesson.title %>"><source src="<%= embedUrl %>" type="video/<%= embedUrl.split('.').pop() %>">No video support.</video></div>
                        <% } else { %>
                            <div class="video-embed-wrapper"><iframe src="<%= embedUrl %>" frameborder="0" allowfullscreen title="Lesson Video: <%= lesson.title %>"></iframe></div>
                        <% } %>
                    <% } else { %> <p class="placeholder-text video-error">Video không khả dụng.</p> <% } %>
                </div>

                 <%# ==================== QUIZ ==================== %>
                 <% } else if (lesson.type === 'quiz') { %>
                    <% /* Parse quiz data safely */ %>
                    <% let quizDataParsed = []; try { if(lesson.editorData?.quiz){ if(typeof lesson.editorData.quiz === 'string'){ quizDataParsed = JSON.parse(lesson.editorData.quiz); } else { quizDataParsed = lesson.editorData.quiz; }} if(!Array.isArray(quizDataParsed)){ quizDataParsed = []; } } catch(e){ console.error("EJS Quiz Parse Error:", e); quizDataParsed = []; } %>
                    <% if (quizDataParsed.length > 0) { %>
                        <div class="lesson-content-quiz">
                            <div class="quiz-controls-header">
                                <% /* Controls as before */ %>
                                <div class="quiz-settings-v2">
                                    <div class="setting-item-v2"><input type="checkbox" id="toggleRandomQuestions" class="custom-checkbox visually-hidden"><label for="toggleRandomQuestions" class="custom-checkbox-label"><span class="custom-choice-indicator"></span> Xáo trộn câu hỏi</label></div>
                                    <div class="setting-item-v2"><input type="checkbox" id="toggleRandomChoices" class="custom-checkbox visually-hidden"><label for="toggleRandomChoices" class="custom-checkbox-label"><span class="custom-choice-indicator"></span> Xáo trộn đáp án</label></div>
                                </div>
                                <button type="button" id="resetQuizBtnV2" class="btn btn-secondary-outline reset-quiz-btn"><i class="fas fa-sync-alt"></i> Tải lại</button>
                            </div>
                            <form id="quizFormV2" class="quiz-form-v2">
                                <div id="quizContainerV2" class="quiz-questions-container">
                                    <% quizDataParsed.forEach((q, idx) => { %>
                                        <% if (q && typeof q === 'object' && q.id && Array.isArray(q.options)) { %>
                                            <%# --- Determine input type based on correct answers --- %>
                                            <% const correctCount = q.options.filter(opt => opt.isCorrect === true).length; %>
                                            <% const inputType = correctCount > 1 ? 'checkbox' : 'radio'; %>
                                            <% const inputName = `question-${idx}-${inputType}`; %> <%# Different name for radio/checkbox groups %>

                                            <div class="quiz-question-card"
                                                 data-original-index="<%= idx %>"
                                                 data-question-id="<%= q.id %>"
                                                 data-input-type="<%= inputType %>"> <%# <<< Store input type for JS %>
                                                <div class="question-header"><div class="question-number">Câu <%= idx + 1 %></div></div>
                                                <div class="question-content-markdown prose-styling"><% try { %><%- marked.parse(q.question || "") %><% } catch(e) { %><p><%= q.question || "(Câu hỏi trống)" %></p><% } %></div>
                                                <div class="quiz-options-list" role="<%= inputType === 'radio' ? 'radiogroup' : 'group' %>" aria-labelledby="q<%= idx %>-label"> <%# ARIA role %>
                                                    <span id="q<%= idx %>-label" class="sr-only">Các lựa chọn cho câu <%= idx + 1 %></span>
                                                    <% q.options.forEach((option, oIdx) => { %>
                                                        <% const optionText = option.text || "(Lựa chọn trống)"; %>
                                                        <% const optionId = `q${idx}o${oIdx}_${q.id}`; %>
                                                        <div class="quiz-option-v2" data-option-index="<%= oIdx %>" data-is-correct="<%= option.isCorrect %>">
                                                            <input type="<%= inputType %>" <%# <<< Use determined type %>
                                                                   name="<%= inputName %>" <%# <<< Use determined name %>
                                                                   id="<%= optionId %>"
                                                                   value="<%= oIdx %>"
                                                                   class="visually-hidden quiz-input"> <%# Generic class %>
                                                            <label for="<%= optionId %>" class="option-label">
                                                                <%# Render indicator based on type (optional, CSS can handle it) %>
                                                                <span class="option-indicator <%= inputType %>"></span>
                                                                <span class="option-text prose-styling">
                                                                    <% try { %><%- marked.parseInline(optionText) %><% } catch(e) { %><%= optionText %><% } %>
                                                                </span>
                                                                <span class="option-feedback-icon"></span>
                                                            </label>
                                                        </div>
                                                    <% }); %>
                                                </div>
                                                <div class="question-feedback"></div>
                                            </div>
                                        <% } else { %> <p class="placeholder-text video-error">Lỗi dữ liệu câu hỏi số <%= idx + 1 %></p> <% } %>
                                    <% }); %>
                                </div>
                                <div id="quizPagination" class="content-pagination"></div>
                                <div class="quiz-submit-area"><button type="submit" class="btn btn-primary-glow submit-quiz-btn"><i class="fas fa-check-double"></i> Nộp bài</button></div>
                            </form>
                            <div id="quizResultV2" class="quiz-result-v2"></div>
                        </div>
                    <% } else { %> <p class="placeholder-text">Không có dữ liệu trắc nghiệm cho bài học này.</p> <% } %>

                <%# ==================== ESSAY ==================== %>
                <% } else if (lesson.type === 'essay') { %>
                 <div class="lesson-content-essay">
                      <% /* Essay prompt and form structure as before */ %>
                     <% if (lesson.editorData?.essayPrompt) { %> <div class="essay-prompt-card"> <h3 class="prompt-title"><i class="fas fa-pencil-ruler"></i> Đề bài</h3> <div class="prompt-content prose-styling"><% try { %><%- marked.parse(lesson.editorData.essayPrompt) %><% } catch(e) { %><%= lesson.editorData.essayPrompt %><% } %></div> </div> <% } %>
                     <% let essayDataParsed = []; try { if(lesson.editorData?.essay){ if(typeof lesson.editorData.essay === 'string'){ essayDataParsed = JSON.parse(lesson.editorData.essay); } else { essayDataParsed = lesson.editorData.essay; } } if(!Array.isArray(essayDataParsed)){ essayDataParsed = []; } } catch(e){ console.error("EJS Essay Parse Error:", e); essayDataParsed = []; } %>
                     <% if (essayDataParsed.length > 0) { %> <form id="essayFormV2" class="essay-form-v2"> <h3 class="essay-section-title">Bài làm của bạn</h3> <% essayDataParsed.forEach((q, idx) => { %> <% if (q && typeof q === 'object') { %> <div class="essay-question-group" data-question-index="<%= idx %>"> <div class="essay-question-content prose-styling"> <span class="question-number">Câu <%= idx + 1 %>:</span> <% try { %> <%- marked.parse(q.question || "(Câu hỏi trống)") %> <% } catch(e) { %> <%= q.question || "(Câu hỏi trống)" %> <% } %> </div> <div class="textarea-wrapper"> <textarea class="essay-answer-textarea form-input-v2" placeholder="Nhập câu trả lời..." rows="5" required name="answers[<%= idx %>]"></textarea> <span class="input-focus-line"></span> </div> </div> <% } %> <% }); %> <div class="essay-submit-area"> <button type="submit" class="btn btn-primary-glow submit-essay-btn" id="submitEssayBtnV2"><i class="fas fa-paper-plane"></i> Gửi bài chấm AI</button> <div id="gradingStatusV2" class="grading-status-v2"></div> </div> </form> <div id="essayResultV2" class="essay-result-v2"></div> <% } else { %> <p class="placeholder-text">Không có câu hỏi tự luận.</p> <% } %>
                 </div>

                <%# ================== TÀI LIỆU ================== %>
                <% } else if (lesson.type === 'document' && lesson.editorData && lesson.editorData.document) { %>
                    <% let docData = null; %>
                    <% try { docData = JSON.parse(lesson.editorData.document); } catch(e){} %>

                    <% if (docData && docData.url) { %>
                        <div class="lesson-content-document">
                            <div class="document-icon">
                                <% if (docData.contentType.includes('pdf')) { %>
                                    <i class="fas fa-file-pdf"></i>
                                <% } else if (docData.contentType.includes('word')) { %>
                                    <i class="fas fa-file-word"></i>
                                <% } else if (docData.contentType.includes('excel') || docData.contentType.includes('spreadsheet')) { %>
                                    <i class="fas fa-file-excel"></i>
                                <% } else { %>
                                    <i class="fas fa-file-alt"></i>
                                <% } %>
                            </div>
                            <h3 class="document-filename"><%= docData.originalName %></h3>
                            <p class="document-meta">
                                Loại file: <%= docData.contentType %> | Kích thước: <%= (docData.size / 1024 / 1024).toFixed(2) %> MB
                            </p>
                            <a href="<%= docData.url %>" class="btn btn-primary-glow" target="_blank" rel="noopener noreferrer">
                                <i class="fas fa-eye"></i> Xem / Tải về
                            </a>
                        </div>
                    <% } else { %>
                        <p class="placeholder-text text-danger">Lỗi: Không tìm thấy thông tin tài liệu đính kèm.</p>
                    <% } %>
                <% } %>
                
            </div> <!-- End .lesson-content-wrapper -->

            <!-- Action/Completion Bar -->
            <div class="lesson-action-bar" data-animate="action-bar-slide-up">
                 <% if (lesson.type === 'quiz' || lesson.type === 'essay') { %> <button type="button" class="btn btn-secondary-outline save-progress-btn" id="lessonProgressBtnV2"><i class="fas fa-save"></i> Lưu Tiến Trình</button> <% } else { %> <span></span> <% } %>
                <div class="completion-wrapper">
                     <% if (lesson.type === 'markdown' && lesson.estimatedReadingTime > 0) { %> <div id="countdownContainerV2" class="countdown-container" title="Thời gian đọc còn lại"> <svg class="countdown-svg" viewBox="0 0 36 36"><path class="countdown-bg-circle" d="M18 2.0845a15.9155 15.9155 0 0 1 0 31.831a15.9155 15.9155 0 0 1 0 -31.831"/><path class="countdown-progress-circle" id="countdownProgressCircle" stroke-dasharray="100, 100" d="M18 2.0845a15.9155 15.9155 0 0 1 0 31.831a15.9155 15.9155 0 0 1 0 -31.831"/></svg> <span id="countdownTextV2" class="countdown-text">--</span> </div> <% } %>
                     <button id="completeLessonBtnV2" class="btn btn-success-glow complete-lesson-btn" disabled><i class="fas fa-check-circle"></i> Hoàn Thành Bài Học</button>
                     <span id="scoreRequirementMsg" class="score-requirement-msg" style="display: none;">(Cần >= 80% để hoàn thành)</span>
                </div>
                 <% if (lesson.subject?._id) { %> <a href="/subjects/<%= lesson.subject._id %>" class="btn btn-secondary-outline back-link-v2 loading-link"><i class="fas fa-arrow-left"></i> Quay Lại Môn Học</a> <% } else { %> <span></span> <% } %>
            </div>

        <% } else { %> <%# Handle lesson not found %>
             <div class="lesson-detail-header"><h1>Lỗi Bài học</h1></div><div class="lesson-content-wrapper"><p class="placeholder-text video-error">Không thể tải thông tin bài học.</p><a href="/dashboard" class="btn btn-primary loading-link mt-3">Quay lại Dashboard</a></div>
        <% } %>

    </div> <!-- End .lesson-detail-container -->

     <!-- Lightbox for Markdown Images -->
     <div id="lessonLightboxModal" class="lightbox-modal-v2"> <div class="lightbox-backdrop"></div> <div class="lightbox-content-wrapper"> <img class="lightbox-image" id="lessonLightboxImg" src="" alt="Lightbox Image"> <button class="lightbox-close-btn" aria-label="Đóng">×</button> <div class="lightbox-info"> <span id="lessonLightboxCaption"></span> </div> </div> </div>

</section>
<%- include('partials/footer') %>

<!-- JS Libraries -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollTrigger.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js" defer></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.css">
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.js"></script>
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/contrib/auto-render.min.js" onload="console.log('KaTeX auto-render loaded for lesson detail.')"></script>
<!-- <script src="/js/prism.js" defer></script> -->
<script src="https://cdn.jsdelivr.net/npm/tsparticles@2.3.4/tsparticles.bundle.min.js"></script>

<!-- Your custom JS -->
<script src="/js/alerts.js" defer></script>
<script src="/js/confirm.js" defer></script>
<script src="/js/lessonDetail.js" defer></script>