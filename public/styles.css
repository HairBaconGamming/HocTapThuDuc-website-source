/* public/styles.css - REDESIGNED FOR COMPLEXITY & ARTISTRY */

/* --- Font Imports --- */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&family=Montserrat:wght@400;500;700;900&display=swap");
/* Optional Display font for striking large headings */
/* @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@700&display=swap'); */

/* --- Enhanced CSS Variables --- */
:root {
  /* --- Core Colors (Maintain color style) --- */
  --primary-color: #7873f5;
  --primary-color-rgb: 120, 115, 245;
  --secondary-color: #ff6ec4; /* Pink */
  --secondary-color-rgb: 255, 110, 196;
  --accent-color: #ffdd57; /* Yellow */
  --accent-color-rgb: 255, 221, 87;
  --danger-color: #f44336;
  --danger-color-hover: #e53935;
  --success-color: #4caf50;
  --success-color-hover: #388e3c;
  --info-color: #2196f3;
  --warning-color: #ff9800;
  --gold-color-start: #f6d365;
  --gold-color-end: #fda085;

  /* --- Text Colors (Adjust contrast if needed) --- */
  /* Ensure these colors have sufficient contrast on their respective backgrounds */
  --text-light: #f0f0f0; /* Text on dark background */
  --text-medium: #a0a0c0; /* Secondary text on dark background */
  --text-dark: #181828; /* Main text on light background (slightly darker) */
  --text-muted: #555; /* Secondary text on light background (slightly darker) */
  --text-placeholder: #aaa; /* Placeholder (slightly lighter) */

  /* --- Background Colors & Layers --- */
  --bg-dark: #12121f; /* Deeper dark background */
  --bg-dark-rgb: 18, 18, 31;
  --bg-light: #f8f9fc; /* More subtle light background */
  --bg-white: #ffffff;
  --bg-card-dark: rgba(
    30,
    30,
    50,
    0.7
  ); /* Dark card, increased transparency and blur */
  --bg-card-light: #fff;
  --bg-input: #fff;
  --bg-hover-light: #e9edf2; /* Gentle light hover */
  --bg-hover-dark: rgba(255, 255, 255, 0.08); /* Dark hover */
  --bg-selected: rgba(
    var(--primary-color-rgb),
    0.15
  ); /* Subtle item selection */
  --bg-success-light: #e8f5e9;
  --bg-danger-light: #ffebee;

  /* --- Complex Borders & Shadows --- */
  --border-color-dark: rgba(255, 255, 255, 0.15);
  --border-color-light: #e0e4e8; /* Light border */
  --border-color-medium: #ced4da;
  --border-color-focus: var(--secondary-color);
  --shadow-light: 0 3px 8px rgba(0, 0, 0, 0.06);
  --shadow-medium: 0 6px 18px rgba(0, 0, 0, 0.1);
  --shadow-dark: 0 10px 30px rgba(0, 0, 0, 0.15);
  --shadow-inset: inset 0 2px 5px rgba(0, 0, 0, 0.1);
  --shadow-glow-primary: 0 0 15px 3px rgba(var(--primary-color-rgb), 0.3),
    0 0 25px 8px rgba(var(--primary-color-rgb), 0.1);
  --shadow-glow-secondary: 0 0 15px 3px rgba(var(--secondary-color-rgb), 0.3),
    0 0 25px 8px rgba(var(--secondary-color-rgb), 0.1);

  /* --- Advanced Glow Effects --- */
  --glow-color-primary: rgba(var(--primary-color-rgb), 0.5);
  --glow-color-secondary: rgba(var(--secondary-color-rgb), 0.4);
  --glow-color-accent: rgba(var(--accent-color-rgb), 0.6);

  /* --- Fonts (Maintained) --- */
  --font-main: "Poppins", sans-serif;
  --font-heading: "Montserrat", sans-serif;
  /* --font-display: 'Playfair Display', serif; */ /* If using Display font */

  /* --- Sizes & Enhanced Transitions --- */
  --container-width: 1240px; /* Slightly increased */
  --border-radius-small: 5px;
  --border-radius-medium: 10px;
  --border-radius-large: 20px;
  --border-radius-pill: 50px; /* More rounded */
  --transition-fast: 0.25s ease-out;
  --transition-smooth: 0.5s cubic-bezier(0.25, 0.8, 0.25, 1); /* Smoother */
  --transition-elastic: 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55); /* Elastic */
  --transition-bouncy: 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275); /* Very bouncy */
  --transition-complex: 0.7s cubic-bezier(0.165, 0.84, 0.44, 1);

  /* --- Notification Variables (Maintained or customize) --- */
  --notification-width: 380px;
  --notification-height: 100px; /* Note: Actual height might vary with content */
  --icon-size: 60px; /* Used in JS? Defined here for consistency */
  --anim-duration-entry: 0.7s; /* Slower, smoother */
  --anim-duration-exit: 0.5s;

  /* --- Header/Footer Height (For calculations) --- */
  --header-height: 70px; /* Example value, adjust if you have a fixed header */
  --footer-height: 120px; /* Example value, adjust based on your footer */
}

/* --- Global Reset & Base Styles --- */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  -webkit-font-smoothing: antialiased; /* Smoothen font */
  -moz-osx-font-smoothing: grayscale;
}

::selection {
  /* Customize selection color */
  background-color: rgba(var(--primary-color-rgb), 0.8);
  color: var(--text-light);
}

/* --- Scrollbar Styling (More aesthetic) --- */
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
::-webkit-scrollbar-track {
  background: var(--bg-dark); /* Darker track */
  border-radius: 10px;
}
::-webkit-scrollbar-thumb {
  background: linear-gradient(
    45deg,
    var(--primary-color),
    var(--secondary-color)
  );
  border-radius: 10px;
  border: 2px solid var(--bg-dark); /* Create spacing */
}
::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(
    45deg,
    var(--secondary-color),
    var(--primary-color)
  );
}
/* Firefox scrollbar (simpler) */
html {
  scrollbar-color: var(--primary-color) var(--bg-dark);
  scrollbar-width: thin;
}

body {
  font-family: var(--font-main);
  background: var(--bg-light);
  color: var(--text-dark);
  line-height: 1.7; /* Increase line-height for readability */
  overflow-x: hidden; /* Prevent unwanted horizontal scroll */
}

body[data-page="home"] {
  background-color: var(--bg-dark);
  color: var(--text-light);
  /* Optional subtle background gradient for homepage */
  background-image: radial-gradient(
      ellipse at 20% 80%,
      rgba(var(--primary-color-rgb), 0.1),
      transparent 60%
    ),
    radial-gradient(
      ellipse at 80% 30%,
      rgba(var(--secondary-color-rgb), 0.08),
      transparent 50%
    );
}

body,
a,
button,
[role="button"],
input,
textarea,
select {
  cursor: none;
}


/* --- Artistic Cursor Container --- */
.artistic-cursor {
  position: fixed; /* Luôn hiển thị trên màn hình */
  top: 0; /* Sẽ được cập nhật bởi JS */
  left: 0; /* Sẽ được cập nhật bởi JS */
  width: 40px; /* Kích thước vùng chứa chính */
  height: 40px; /* Kích thước vùng chứa chính */
  z-index: 9999; /* Đảm bảo luôn ở trên cùng */
  pointer-events: none; /* Cho phép click xuyên qua */
  transition: transform 0, opacity var(--transition-smooth); /* Chuyển động cơ bản */
  will-change: transform; /* Tối ưu hóa hiệu suất cho transform */
}

/* --- Core Element (Lõi năng lượng) --- */
.cursor-core {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 12px; /* Kích thước lõi nhỏ hơn */
  height: 12px; /* Kích thước lõi nhỏ hơn */
  background: radial-gradient(
    circle at center,
    rgba(var(--accent-color-rgb), 0.95) 0%,
    /* Trung tâm sáng rực */ rgba(var(--primary-color-rgb), 0.85) 60%,
    /* Chuyển màu chính */ rgba(var(--primary-color-rgb), 0) 100%
      /* Mờ dần ra ngoài */
  );
  border-radius: var(--border-radius-pill);
  transform: translate(-50%, -50%) scale(1); /* Căn giữa và scale */
  transition: transform var(--transition-elastic) 0.05s,
    /* Phản ứng nảy nhẹ */ background var(--transition-smooth),
    box-shadow var(--transition-smooth);
  box-shadow: 0 0 8px 2px rgba(var(--primary-color-rgb), 0.4),
    /* Ánh sáng trong nhẹ */ 0 0 15px 5px rgba(var(--accent-color-rgb), 0.2); /* Hào quang vàng nhẹ */
  will-change: transform, box-shadow, background;
}

/* --- Outer Glow (Vầng hào quang chính) --- */
.cursor-glow {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%; /* Chiếm toàn bộ container */
  height: 100%; /* Chiếm toàn bộ container */
  background: radial-gradient(
    circle at center,
    rgba(var(--secondary-color-rgb), 0) 0%,
    /* Trong suốt ở trung tâm */ rgba(var(--secondary-color-rgb), 0.15) 40%,
    /* Ánh hồng lan tỏa nhẹ */ rgba(var(--primary-color-rgb), 0.25) 75%,
    /* Chuyển sang màu chính */ rgba(var(--primary-color-rgb), 0) 100%
      /* Mờ dần hoàn toàn */
  );
  border-radius: var(--border-radius-pill);
  transform: translate(-50%, -50%) scale(1);
  opacity: 0.8;
  transition: transform var(--transition-smooth),
    opacity var(--transition-smooth), background var(--transition-smooth);
  box-shadow: var(--shadow-glow-primary); /* Sử dụng glow shadow chính */
  animation: subtlePulse 4s infinite ease-in-out;
  will-change: transform, opacity, box-shadow;
}

/* --- Particle Base Style (Được tạo bởi JS) --- */
.cursor-particle {
  position: fixed; /* Cần fixed để theo chuột */
  top: 0;
  left: 0;
  width: 6px; /* Hạt nhỏ */
  height: 6px;
  border-radius: var(--border-radius-pill);
  pointer-events: none;
  z-index: 9998; /* Ngay dưới con trỏ chính */
  background: var(--primary-color); /* Màu cơ bản */
  opacity: 0.7;
  transition: transform 1s ease-out, opacity 1s ease-out; /* Thời gian tồn tại & mờ đi */
  will-change: transform, opacity;
  /* Hiệu ứng tinh thể / lấp lánh có thể thêm bằng ::after hoặc gradient phức tạp */
  background: radial-gradient(
    circle,
    var(--accent-color) 0%,
    var(--secondary-color) 70%,
    transparent 100%
  );
  box-shadow: 0 0 5px 1px var(--glow-color-secondary);
}

/* --- Keyframes Animations --- */
@keyframes subtlePulse {
  0%,
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.8;
    box-shadow: var(--shadow-glow-primary);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.15); /* Hơi phình to */
    opacity: 1;
    box-shadow: 0 0 20px 6px rgba(var(--primary-color-rgb), 0.4),
      /* Tăng cường glow */ 0 0 35px 12px rgba(var(--secondary-color-rgb), 0.2);
  }
}

/* --- Hover/Interaction States (Thêm class bằng JS) --- */

/* Khi di chuột qua link hoặc button */
body:has(a:hover, button:hover, [role="button"]:hover, input:hover, textarea:hover, select:hover)
  .artistic-cursor
  .cursor-core {
  transform: translate(-50%, -50%) scale(0.7); /* Lõi thu nhỏ lại */
  background: radial-gradient(
    circle at center,
    #ffffff 20%,
    /* Lõi trắng sáng */ rgba(var(--secondary-color-rgb), 0.9) 70%,
    rgba(var(--secondary-color-rgb), 0) 100%
  );
  box-shadow: var(--shadow-glow-secondary); /* Chuyển sang glow phụ */
  transition: transform var(--transition-fast),
    background var(--transition-fast), box-shadow var(--transition-fast); /* Phản ứng nhanh */
}

body:has(a:hover, button:hover, [role="button"]:hover, input:hover, textarea:hover, select:hover)
  .artistic-cursor
  .cursor-glow {
  transform: translate(-50%, -50%) scale(1.8); /* Hào quang nở rộng mạnh mẽ */
  opacity: 0.5;
  animation: none; /* Tạm dừng animation mặc định */
  background: radial-gradient(
    circle at center,
    rgba(var(--accent-color-rgb), 0) 0%,
    rgba(var(--accent-color-rgb), 0.2) 50%,
    /* Chuyển sang glow vàng */ rgba(var(--secondary-color-rgb), 0.3) 80%,
    rgba(var(--secondary-color-rgb), 0) 100%
  );
  box-shadow: var(--shadow-glow-accent); /* Glow vàng */
  transition: transform var(--transition-bouncy),
    opacity var(--transition-smooth), background var(--transition-smooth),
    box-shadow var(--transition-smooth); /* Hiệu ứng nảy khi nở */
}

.artistic-cursor.cursor-idle .cursor-core {
  /* Có thể làm lõi hơi co lại hoặc thay đổi màu nhẹ khi đứng yên */
  transform: translate(-50%, -50%) scale(0.9);
  filter: brightness(1.1); /* Sáng hơn một chút */
  transition: transform var(--transition-smooth),
    filter var(--transition-smooth), background var(--transition-smooth),
    box-shadow var(--transition-smooth);
}

.artistic-cursor.cursor-idle .cursor-glow {
  /* Làm animation pulse rõ ràng hơn hoặc chậm lại */
  animation: subtlePulseIdle 5s infinite ease-in-out; /* Sử dụng animation khác hoặc cùng tên với duration khác */
  opacity: 0.9; /* Hào quang rõ hơn một chút */
  /* Có thể giảm nhẹ scale để tạo cảm giác "nghỉ ngơi" */
  transform: translate(-50%, -50%) scale(0.95);
  transition: transform var(--transition-smooth),
    opacity var(--transition-smooth), background var(--transition-smooth),
    box-shadow var(--transition-smooth);
}

/* Tùy chọn: Định nghĩa animation mới cho trạng thái idle */
@keyframes subtlePulseIdle {
  0%,
  100% {
    transform: translate(-50%, -50%) scale(0.95); /* Scale cơ bản khi idle */
    opacity: 0.9;
    box-shadow: var(--shadow-glow-primary);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.05); /* Pulse nhẹ hơn so với khi di chuyển */
    opacity: 1;
    box-shadow: 0 0 18px 5px rgba(var(--primary-color-rgb), 0.45),
      /* Glow hơi khác */ 0 0 30px 10px rgba(var(--secondary-color-rgb), 0.25);
  }
}

/* Đảm bảo các trạng thái khác ghi đè đúng cách nếu cần */
body:is(.cursor-interacting, .cursor-clicking)
  .artistic-cursor.cursor-idle
  .cursor-core,
body:is(.cursor-interacting, .cursor-clicking)
  .artistic-cursor.cursor-idle
  .cursor-glow {
  /* Reset lại animation nếu trạng thái idle bị ghi đè bởi interaction/click */
  animation: none;
  /* Các style khác sẽ được áp dụng bởi quy tắc .cursor-interacting / .cursor-clicking */
}

/* Điều chỉnh CSS cho trạng thái hover để ưu tiên hơn idle */
/* Selector cần mạnh hơn hoặc đặt sau */
body.cursor-interacting .artistic-cursor .cursor-core {
  /* Style khi hover (như cũ) */
  transform: translate(-50%, -50%) scale(0.7) !important; /* !important nếu cần ghi đè idle */
  background: radial-gradient(
    circle at center,
    #ffffff 20%,
    rgba(var(--secondary-color-rgb), 0.9) 70%,
    rgba(var(--secondary-color-rgb), 0) 100%
  );
  box-shadow: var(--shadow-glow-secondary) !important;
  transition: transform var(--transition-fast),
    background var(--transition-fast), box-shadow var(--transition-fast);
  filter: none; /* Reset filter từ idle */
  animation: none; /* Dừng animation idle */
}

body.cursor-interacting .artistic-cursor .cursor-glow {
  /* Style khi hover (như cũ) */
  transform: translate(-50%, -50%) scale(1.8) !important;
  opacity: 0.5 !important;
  animation: none !important; /* Dừng animation idle */
  background: radial-gradient(
    circle at center,
    rgba(var(--accent-color-rgb), 0) 0%,
    rgba(var(--accent-color-rgb), 0.2) 50%,
    rgba(var(--secondary-color-rgb), 0.3) 80%,
    rgba(var(--secondary-color-rgb), 0) 100%
  );
  box-shadow: var(--shadow-glow-accent) !important;
  transition: transform var(--transition-bouncy),
    opacity var(--transition-smooth), background var(--transition-smooth),
    box-shadow var(--transition-smooth);
}

/* Tương tự cho clicking */
body.cursor-clicking .artistic-cursor .cursor-core {
  transform: translate(-50%, -50%) scale(1.4) !important;
  filter: brightness(1.5) !important;
  transition: transform 0.1s ease-out, filter 0.1s ease-out;
  animation: none; /* Dừng animation idle */
}

body.cursor-clicking .artistic-cursor .cursor-glow {
  transform: translate(-50%, -50%) scale(0.8) !important;
  opacity: 1 !important;
  filter: brightness(1.2) !important;
  transition: transform 0.1s ease-out, opacity 0.1s ease-out,
    filter 0.1s ease-out;
  animation: none !important; /* Dừng animation idle */
}

a {
  color: var(--primary-color);
  text-decoration: none;
  position: relative; /* For underline effect */
  transition: color var(--transition-fast);
}
a::after {
  /* Custom underline effect */
  content: "";
  position: absolute;
  width: 0;
  height: 2px;
  bottom: -3px;
  left: 0;
  background: linear-gradient(
    90deg,
    var(--secondary-color),
    var(--primary-color)
  );
  transition: width var(--transition-smooth);
}
a:hover {
  color: var(--secondary-color);
}
a:hover::after {
  width: 100%;
}

ul {
  list-style: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-heading);
  line-height: 1.3;
  margin-bottom: 1.2rem;
  font-weight: 700;
  letter-spacing: -0.5px; /* Adjust letter spacing */
}

h2 {
  color: var(--text-dark);
  font-size: 2rem; /* Increase H2 size */
}
body[data-page="home"] h2 {
  color: var(--text-light); /* H2 on dark background */
}

/* General Container */
.container {
  max-width: var(--container-width);
  margin: 0 auto;
  padding: 40px 20px; /* Increase padding */
}
.container h2 {
  /* H2 inside container */
  font-size: 1.8rem; /* Maintain this size or adjust */
  color: inherit; /* Inherit color from body */
  margin-bottom: 2rem; /* Increase bottom margin */
  text-align: center; /* Center section title */
  position: relative;
  padding-bottom: 10px;
}
.container h2::after {
  /* Add decorative underline */
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 3px;
  background: linear-gradient(
    90deg,
    var(--primary-color),
    var(--secondary-color)
  );
  border-radius: 2px;
}

/* --- Fullscreen Modal (Add entry/exit effects) --- */
@keyframes modalFadeIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes modalFadeOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}
.fullscreen-modal {
  position: fixed; /* Ensure it covers the screen */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex; /* Always flex */
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--transition-smooth);
  background-color: rgba(10, 10, 20, 0.95); /* Darker and slightly blueish */
  backdrop-filter: blur(5px);
  z-index: 1000; /* Ensure it's above other content */
}
.fullscreen-modal.active {
  opacity: 1;
  pointer-events: auto;
  animation: modalFadeIn var(--transition-smooth) forwards;
}
.fullscreen-modal.exiting {
  /* Temporary class during closing */
  animation: modalFadeOut calc(var(--transition-smooth) * 0.8) forwards;
}
.modal-content {
  background: var(--bg-card-dark); /* Use dark card background for modal */
  padding: 30px 40px;
  border-radius: var(--border-radius-medium);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);
  transform: scale(1); /* Reset transform */
  max-width: 90%;
  max-height: 90%;
  overflow: auto; /* Allow scrolling if content overflows */
  color: var(--text-light); /* Text color for modal content */
  position: relative; /* For close button positioning */
}
.modal-close {
  position: absolute;
  top: 15px;
  right: 15px;
  background: none;
  border: none;
  font-size: 2rem;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.8);
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  transition: color var(--transition-fast), transform var(--transition-elastic);
  z-index: 10; /* Above modal content */
}
.modal-close:hover,
.modal-close:focus {
  color: var(--secondary-color);
  transform: scale(1.2) rotate(90deg);
}

/* --- TUI Editor Container (Add subtle shadow) --- */
.toastui-editor-container {
  /* ... keep existing styles ... */
  border: 1px solid var(--border-color-light);
  border-radius: var(--border-radius-medium);
  margin-top: 1rem;
  box-shadow: var(--shadow-inset);
}

/* --- Live List Section (Redesigned items) --- */
.live-list-section {
  padding: 60px 20px;
  background: linear-gradient(
    180deg,
    var(--bg-white) 0%,
    var(--bg-light) 100%
  ); /* Subtle gradient background */
}
.live-list-section .container h2 {
  color: var(--text-dark);
}
#liveList {
  list-style: none;
  padding: 0;
  max-width: 750px;
  margin: 0 auto;
}
/* Style for each item in the live list */
#liveList .live-item {
  background: var(--bg-white);
  border: 1px solid var(--border-color-light);
  border-left: 5px solid var(--primary-color); /* Add left border as accent */
  border-radius: var(--border-radius-medium);
  padding: 20px 25px;
  margin-bottom: 15px; /* Increase spacing */
  transition: transform var(--transition-smooth),
    box-shadow var(--transition-smooth), border-color var(--transition-fast);
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: 15px;
  position: relative;
  overflow: hidden; /* For ::before effect */
}
#liveList .live-item::before {
  /* Background effect on hover */
  content: "";
  position: absolute;
  top: 0;
  left: -100%; /* Start outside */
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    rgba(var(--primary-color-rgb), 0.05),
    rgba(var(--secondary-color-rgb), 0.05)
  );
  transition: left var(--transition-smooth);
  z-index: 0;
}
#liveList .live-item:hover {
  transform: translateY(-5px) scale(1.01);
  box-shadow: var(--shadow-medium);
  border-color: var(--secondary-color);
  border-left-color: var(--secondary-color);
}
#liveList .live-item:hover::before {
  left: 0; /* Move inside */
}
.live-link {
  color: var(
    --text-dark
  ); /* Change link color for better visibility on white bg */
  font-weight: 600;
  flex-grow: 1;
  margin-right: 15px;
  z-index: 1; /* Above ::before */
  transition: color var(--transition-fast);
}
.live-link:hover {
  color: var(--primary-color); /* Change hover color */
  text-decoration: none; /* Remove default underline, use a::after effect */
}
.share-link-btn {
  /* Upgrade share button */
  background: linear-gradient(45deg, var(--success-color), #66bb6a);
  color: white;
  border: none;
  padding: 10px 20px; /* Increase padding */
  border-radius: var(--border-radius-pill);
  font-size: 0.9rem;
  font-weight: 600; /* Increase weight */
  cursor: pointer;
  transition: all var(--transition-elastic); /* Use elastic transition */
  box-shadow: 0 2px 5px rgba(76, 175, 80, 0.3);
  z-index: 1;
  white-space: nowrap;
}
.share-link-btn:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 10px rgba(76, 175, 80, 0.4);
}
.share-link-btn:active {
  transform: scale(0.95);
  box-shadow: 0 1px 3px rgba(76, 175, 80, 0.2);
}
@media (max-width: 600px) {
  #liveList .live-item {
    flex-direction: column; /* Stack elements */
    align-items: flex-start; /* Align items to the start */
  }
  .live-link {
    margin-right: 0;
    margin-bottom: 10px; /* Add space below link */
  }
  .share-link-btn {
    align-self: flex-end; /* Move button to the right */
  }
}

/* --- Lesson/News List (In Hero - Aesthetic Upgrade) --- */
.lesson-list,
.news-list {
  list-style: none;
  padding: 0;
  max-height: 250px; /* Limit height if needed */
  overflow-y: auto;
  padding-right: 10px; /* Space for scrollbar */
}
/* Scrollbar for these lists (if applicable) */
.lesson-list::-webkit-scrollbar,
.news-list::-webkit-scrollbar {
  width: 6px;
}
.lesson-list::-webkit-scrollbar-track,
.news-list::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 3px;
}
.lesson-list::-webkit-scrollbar-thumb,
.news-list::-webkit-scrollbar-thumb {
  background: var(--primary-color);
  border-radius: 3px;
}

.lesson-list .lesson-item,
.news-list .news-item {
  padding: 15px 10px; /* Increase padding */
  border-bottom: 1px solid var(--border-color-dark); /* Slightly more visible */
  transition: background-color var(--transition-fast),
    transform var(--transition-fast);
  margin-left: -10px; /* Adjust alignment after adding padding */
  margin-right: -10px;
}
.lesson-list .lesson-item:last-child,
.news-list .news-item:last-child {
  border-bottom: none;
}
.lesson-list .lesson-item:hover,
.news-list .news-item:hover {
  background-color: rgba(255, 255, 255, 0.05);
  transform: translateX(5px);
}
.lesson-list .lesson-item .lesson-title, /* Assuming these exist */
.news-list .news-item .news-title {
  /* Assuming these exist */
  font-size: 1.1rem; /* Keep or slightly increase */
  font-weight: 600;
  margin: 0 0 5px 0;
  color: var(--text-light);
  display: block; /* Allow full item hover */
  transition: color var(--transition-fast);
}
.lesson-list .lesson-item:hover .lesson-title,
.news-list .news-item:hover .news-title {
  color: var(--secondary-color); /* Highlight title on hover */
}

.lesson-list .lesson-item .lesson-date, /* Assuming these exist */
.news-list .news-item .news-date {
  /* Assuming these exist */
  font-size: 0.85em;
  color: var(--text-medium);
  opacity: 0.8; /* Reduce glare */
}

/* --- Stagger Animation (Adjustment) --- */
@keyframes staggerFadeUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
[data-animate="stagger"] {
  opacity: 0; /* Animation triggered by JS, but declare here */
}
.stagger-in {
  /* Class added by JS */
  animation: staggerFadeUp var(--transition-complex) forwards;
  /* Delay added inline style by JS: style="animation-delay: 0.1s;" */
}

/* --- Hero Section (Super Complex) --- */
.hero {
  position: relative;
  height: 100vh; /* Use height instead of min-height */
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
  padding: 0 20px; /* Keep only horizontal padding, remove top/bottom */
}
.hero-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    ellipse at center,
    rgba(var(--bg-dark-rgb), 0.5) 0%,
    rgba(var(--bg-dark-rgb), 0.9) 70%,
    var(--bg-dark) 100%
  );
  z-index: 1;
  pointer-events: none;
}
.hero-container {
  position: relative;
  z-index: 2;
  max-width: var(--container-width);
  width: 100%;
  margin: 0 auto;
}
.hero-content.guest {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.hero-title {
  font-family: var(--font-heading);
  font-size: clamp(2.5rem, 6vw, 4rem);
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 1px;
  line-height: 1.2;
  color: var(--text-light);
  margin-bottom: 1rem;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.2),
    0 0 20px rgba(var(--secondary-color-rgb), 0.3);
}
.hero-title .line {
  display: block;
  overflow: hidden;
  margin-bottom: 0.5rem;
}
.hero-title .line .word {
  display: inline-block;
  transform-origin: bottom left;
}
.hero-title .line .accent-word {
  color: var(--secondary-color);
}
.big-text-wrapper {
  display: block;
  margin-top: 0.5rem;
}
.big-text {
  font-family: var(--font-heading);
  font-size: clamp(6rem, 18vw, 12rem);
  font-weight: 900;
  line-height: 1.5;
  background: linear-gradient(
    60deg,
    var(--secondary-color),
    var(--primary-color),
    var(--accent-color),
    var(--secondary-color)
  );
  background-size: 300% 300%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: complexRainbow 8s ease infinite;
  display: inline-block;
}
@keyframes complexRainbow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
.hero-subtitle {
  font-family: var(--font-main);
  font-size: clamp(1.2rem, 3vw, 1.8rem);
  color: var(--accent-color);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: 2.5rem;
  text-shadow: 0 0 8px var(--glow-color-accent);
}
.hero-subtitle .char {
  display: inline-block;
} /* For potential character animation */
.btn-glow {
  position: relative;
  padding: 15px 35px;
  font-family: var(--font-main);
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--text-light);
  background: linear-gradient(
    45deg,
    var(--primary-color),
    var(--secondary-color)
  );
  border: none;
  border-radius: var(--border-radius-pill);
  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 1px;
  overflow: hidden;
  transition: transform var(--transition-fast),
    box-shadow var(--transition-fast);
  z-index: 1;
  box-shadow: 0 0 15px 0 var(--glow-color-primary),
    0 0 25px 0 var(--glow-color-primary);
}
.btn-glow .btn-text {
  position: relative;
  z-index: 2;
}
.btn-glow .btn-liquid {
  position: absolute;
  top: -50px;
  left: 50%;
  width: 150px;
  height: 150px;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 45%;
  transform: translateX(-50%) scale(0);
  transition: transform 0.5s ease, border-radius 0.5s ease;
  z-index: 1;
  opacity: 0;
}
.btn-glow:hover {
  transform: translateY(-3px) scale(1.03);
  box-shadow: 0 0 25px 5px var(--glow-color-primary),
    0 0 40px 10px var(--glow-color-primary);
}
.btn-glow:hover .btn-liquid {
  transform: translateX(-50%) scale(1.5);
  border-radius: 40%;
  opacity: 1;
}
.hero-content.logged-in {
  width: 100%;
}
.hero-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
  margin-bottom: 40px;
}

.interactive-card {
  /* Advanced interactive card */
  position: relative;
  background: var(--bg-card-dark);
  border: 1px solid var(--border-color-dark);
  border-radius: var(--border-radius-large); /* More rounded */
  padding: 30px; /* Increase padding */
  backdrop-filter: blur(15px); /* Stronger blur */
  -webkit-backdrop-filter: blur(15px);
  overflow: hidden;
  transition: transform var(--transition-smooth),
    box-shadow var(--transition-smooth), border-color var(--transition-smooth);
  will-change: transform, box-shadow;
  box-shadow: var(--shadow-medium);
}
/* Gradient border effect on hover */
@property --angle {
  /* Declare angle variable for animation */
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}
@keyframes rotateGradient {
  to {
    --angle: 360deg;
  }
}
.interactive-card::before,
.interactive-card::after {
  content: "";
  position: absolute;
  border-radius: inherit; /* Follow card's border */
  inset: -2px; /* 2px thick */
  background: conic-gradient(
    from var(--angle, 0deg),
    var(--primary-color),
    var(--secondary-color),
    var(--accent-color),
    var(--secondary-color),
    var(--primary-color)
  );
  z-index: -1;
  filter: blur(5px); /* Blur the gradient border */
  opacity: 0;
  transition: opacity var(--transition-smooth), filter var(--transition-smooth);
  animation: rotateGradient 6s linear infinite paused; /* Animation initially paused */
}
.interactive-card::after {
  /* Sharper inner gradient layer */
  filter: blur(0px);
  /* Re-declare background for potentially different inner look if desired, otherwise inherit */
  background: conic-gradient(
    from var(--angle, 0deg),
    var(--primary-color),
    var(--secondary-color),
    var(--accent-color),
    var(--primary-color)
  ); /* Simpler gradient maybe */
  z-index: -1; /* Below content but above ::before */
  opacity: 0; /* Initially hidden */
  transition: opacity var(--transition-smooth);
}

.interactive-card:hover {
  transform: translateY(-8px) scale(1.02); /* Lift higher */
  box-shadow: var(--shadow-dark), var(--shadow-glow-primary); /* Add glow */
  border-color: transparent; /* Hide original border */
}
.interactive-card:hover::before,
.interactive-card:hover::after {
  opacity: 1;
  animation-play-state: running; /* Run animation */
  filter: blur(8px); /* Increase blur for ::before on hover */
}
.interactive-card:hover::after {
  filter: blur(0px); /* Keep ::after sharp */
}

.card-content {
  position: relative;
  z-index: 1;
}
.card-title {
  font-family: var(--font-heading);
  font-size: 1.8rem; /* Increase size */
  color: var(--secondary-color);
  margin-top: 0;
  margin-bottom: 20px; /* Increase spacing */
  border-bottom: 1px solid var(--border-color-dark);
  padding-bottom: 15px;
  text-shadow: 0 0 8px rgba(var(--secondary-color-rgb), 0.3); /* Add shadow */
}
/* Apply to both paragraph in stat card and list item in content list card */
.stat-card p,
.latest-card .list-item {
  margin-bottom: 15px;
  font-size: 1.05rem; /* Slightly increase size */
  line-height: 1.6;
  color: var(--text-light);
}
.stat-card strong {
  color: var(--accent-color);
  font-weight: 700; /* Bolder */
}
.card-icon {
  color: var(--primary-color);
  margin-right: 12px;
  width: 22px;
  text-align: center;
} /* Assuming usage with icons */

.content-list {
  /* Keep scrollbar styles from .lesson-list */
  list-style: none;
  padding: 0;
  margin: 0;
  max-height: 220px;
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--primary-color) rgba(255, 255, 255, 0.05);
}
.content-list::-webkit-scrollbar {
  width: 6px;
}
.content-list::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 3px;
}
.content-list::-webkit-scrollbar-thumb {
  background-color: var(--primary-color);
  border-radius: 3px;
}

.list-item {
  /* Used within content-list */
  margin-bottom: 12px;
  padding-bottom: 12px;
  border-bottom: 1px dashed rgba(var(--primary-color-rgb), 0.3); /* More colorful border */
  position: relative;
  padding-left: 15px; /* Space for ::before */
}
.list-item::before {
  /* Add custom bullet point */
  content: "✦"; /* Star or diamond */
  position: absolute;
  left: 0;
  top: 0;
  color: var(--primary-color);
  font-size: 0.8em;
  transition: transform var(--transition-elastic);
}
.list-item:hover::before {
  transform: rotate(180deg) scale(1.2);
}
.list-item:last-child {
  border-bottom: none;
  margin-bottom: 0;
  padding-bottom: 0;
}

.item-link {
  /* Link within content-list */
  color: var(--text-light);
  text-decoration: none;
  transition: color var(--transition-fast), transform var(--transition-fast);
  display: block;
}
.item-link:hover {
  color: var(--secondary-color);
  transform: translateX(5px); /* Keep this effect */
}
.item-link:hover::after {
  /* Disable default a::after underline */
  width: 0;
}
.item-title {
  font-size: 1.15rem;
  font-weight: 600;
  margin: 0 0 6px 0;
}
.item-date {
  font-size: 0.85rem;
  color: var(--text-medium);
  opacity: 0.9;
}
.no-content {
  color: var(--text-medium);
  font-style: italic;
  text-align: center;
  padding: 20px 0;
}

/* Live Feed Container */
@keyframes feedItemIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
#liveFeedContainer {
  margin-top: 50px;
  padding: 20px;
  background: rgba(0, 0, 0, 0.4);
  border-radius: var(--border-radius-medium);
  border: 1px solid var(--border-color-dark);
  max-height: 280px;
  overflow: hidden;
  position: relative;
  transition: opacity 0.5s ease;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: var(--shadow-inset);
}
#liveFeed {
  max-height: 240px; /* Ensure space for padding */
  overflow-y: auto;
  /* Scrollbar style similar to content-list */
  scrollbar-width: thin;
  scrollbar-color: var(--secondary-color) rgba(0, 0, 0, 0.2);
}
#liveFeed::-webkit-scrollbar {
  width: 6px;
}
#liveFeed::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
}
#liveFeed::-webkit-scrollbar-thumb {
  background-color: var(--secondary-color);
  border-radius: 3px;
}

#liveFeed .live-item {
  padding: 12px 18px;
  margin-bottom: 10px;
  background: rgba(255, 255, 255, 0.08);
  border-radius: var(--border-radius-medium); /* More rounded */
  font-size: 0.95rem;
  border-left: 4px solid var(--primary-color);
  overflow: hidden;
  animation: feedItemIn 0.5s var(--transition-smooth) forwards; /* Animation for new items */
  transition: background-color var(--transition-fast),
    border-left-color var(--transition-fast);
}
#liveFeed .live-item:last-child {
  margin-bottom: 0;
}
#liveFeed .live-item:hover {
  background: rgba(255, 255, 255, 0.12);
  border-left-color: var(--secondary-color);
}
#liveFeed .live-item strong {
  color: var(--secondary-color);
  font-weight: 600;
}
#liveFeed .live-item .time {
  font-size: 0.8rem;
  color: var(--text-medium);
  margin-left: 10px;
  float: right;
  opacity: 0.8;
}
#liveFeed .live-item .live-icon {
  margin-right: 10px;
  color: var(--primary-color);
  font-size: 1.1em;
  vertical-align: middle;
} /* Example class for an icon */

/* --- General Buttons (Comprehensive Upgrade) --- */
.btn {
  display: inline-block;
  padding: 12px 30px; /* Increase padding */
  border-radius: var(--border-radius-pill);
  text-decoration: none;
  transition: all var(--transition-elastic); /* Use elastic by default */
  font-family: var(--font-main);
  font-weight: 600;
  cursor: pointer;
  border: none;
  text-align: center;
  line-height: 1.5;
  position: relative; /* For ::before/::after effects */
  overflow: hidden; /* Prevent effects from overflowing */
  z-index: 1;
  will-change: transform, box-shadow;
}
.btn-primary {
  background: linear-gradient(
    45deg,
    var(--primary-color),
    var(--secondary-color)
  );
  color: var(--text-light);
  box-shadow: 0 5px 15px rgba(var(--primary-color-rgb), 0.3),
    0 2px 5px rgba(var(--secondary-color-rgb), 0.2);
}
.btn-primary::before {
  /* Light sweep effect */
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  transform: skewX(-25deg);
  transition: left var(--transition-smooth);
}
.btn-primary:hover {
  transform: translateY(-3px) scale(1.03);
  box-shadow: 0 8px 20px rgba(var(--primary-color-rgb), 0.4),
    0 4px 8px rgba(var(--secondary-color-rgb), 0.3);
}
.btn-primary:hover::before {
  left: 120%;
}
.btn-secondary {
  background-color: var(--bg-white);
  color: var(--text-dark);
  border: 2px solid var(--border-color-light); /* Thicker border */
  box-shadow: var(--shadow-light);
}
.btn-secondary:hover {
  background-color: var(--bg-hover-light);
  border-color: var(--border-color-medium);
  transform: scale(1.03);
  box-shadow: var(--shadow-medium);
  color: var(--primary-color); /* Change text color on hover */
}
.btn-danger {
  /* Similar to primary but red */
  background: linear-gradient(45deg, var(--danger-color), #ff7961);
  color: var(--text-light);
  padding: 10px 20px;
  font-size: 0.9rem;
  box-shadow: 0 4px 10px rgba(244, 67, 54, 0.3);
}
.btn-danger:hover {
  background: linear-gradient(45deg, var(--danger-color-hover), #f05545);
  transform: scale(1.05);
  box-shadow: 0 6px 15px rgba(244, 67, 54, 0.4);
}
.btn-success {
  /* Similar to primary but green */
  background: linear-gradient(45deg, var(--success-color), #66bb6a);
  color: var(--text-light);
  box-shadow: 0 4px 10px rgba(76, 175, 80, 0.3);
}
.btn-success:hover {
  background: linear-gradient(45deg, var(--success-color-hover), #5cb860);
  transform: scale(1.05);
  box-shadow: 0 6px 15px rgba(76, 175, 80, 0.4);
}
/* General active state for buttons */
.btn:active {
  transform: translateY(1px) scale(0.98); /* Slight push down */
  filter: brightness(0.95); /* Darken slightly */
  box-shadow: none; /* Remove shadow on press */
}

/* --- Specific Buttons --- */
.btn-submit {
  /* More distinct submit button */
  width: 100%;
  background: var(--text-dark);
  color: var(--text-light);
  padding: 15px 30px; /* Larger */
  font-size: 1.1rem;
  letter-spacing: 1px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}
.btn-submit:hover {
  background: #333;
  transform: scale(1.02);
  color: var(--primary-color);
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
}
.btn-add {
  /* Keep or customize similar to primary/success */
  background: linear-gradient(45deg, var(--secondary-color), #ff80ab);
  color: var(--text-light);
  padding: 12px 30px;
  box-shadow: 0 4px 10px rgba(var(--secondary-color-rgb), 0.3);
}
.btn-add:hover {
  background: linear-gradient(45deg, #e03570, var(--secondary-color));
  transform: scale(1.05);
  box-shadow: 0 6px 15px rgba(var(--secondary-color-rgb), 0.4);
}
.btn.add-option-btn {
  /* Add quiz option button */
  background-color: var(--bg-light);
  color: var(--primary-color);
  border: 1px dashed var(--primary-color); /* Dashed border */
  padding: 10px 20px;
  font-size: 0.9rem;
  border-radius: var(--border-radius-medium);
  transition: all var(--transition-fast);
}
.btn.add-option-btn:hover {
  background-color: rgba(var(--primary-color-rgb), 0.1);
  color: var(--primary-color);
  border-style: solid; /* Change to solid on hover */
  transform: scale(1.02);
  box-shadow: 0 2px 6px rgba(var(--primary-color-rgb), 0.1);
}
/* .share-link-btn is styled in the Live List section */
.filter-bar .filter-btn {
  /* Filter button */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, var(--secondary-color), #ff79a9);
  border: none;
  padding: 10px 20px;
  font-size: 0.95rem;
  color: #fff;
  text-decoration: none;
  border-radius: var(--border-radius-pill);
  box-shadow: var(--shadow-light);
  transition: transform var(--transition-elastic),
    box-shadow var(--transition-fast);
  white-space: nowrap;
}
.filter-bar .filter-btn:hover {
  transform: scale(1.08); /* More bouncy */
  box-shadow: 0 6px 15px rgba(var(--secondary-color-rgb), 0.25);
}
.detail-link {
  /* View Details button */
  display: inline-block;
  padding: 8px 18px; /* Increase padding */
  background: var(--bg-white);
  color: var(--primary-color); /* Change text color */
  text-decoration: none;
  border: 1px solid var(--border-color-light);
  border-radius: var(--border-radius-pill); /* Rounded */
  transition: all var(--transition-smooth);
  font-size: 0.9rem;
  font-weight: 500;
}
.detail-link:hover {
  background: rgba(var(--primary-color-rgb), 0.1);
  border-color: var(--primary-color);
  color: var(--primary-color);
  transform: translateY(-2px);
  box-shadow: 0 3px 8px rgba(var(--primary-color-rgb), 0.1);
}

/* --- Form Styles (Upgrade) --- */
.form-group {
  margin-bottom: 1.5rem; /* Increase spacing */
}
.form-group label {
  display: block;
  margin-bottom: 0.6rem; /* Increase spacing */
  color: var(--text-muted);
  font-weight: 600; /* Bolder */
  font-size: 0.95rem; /* Slightly larger */
  transition: color var(--transition-fast);
}
.form-group input:not([type="radio"]):not([type="checkbox"]):focus ~ label,
.form-group textarea:focus ~ label,
.form-group select:focus ~ label {
  /* Label effect on input focus */
  color: var(--primary-color);
}

/* Input, Textarea, Select common styles */
.form-group input:not([type="radio"]):not([type="checkbox"]),
.form-group textarea,
.form-group select,
.form-input /* Also apply to elements with .form-input class */ {
  width: 100%;
  padding: 14px 18px; /* Increase padding */
  border: 1px solid var(--border-color-light);
  border-radius: var(--border-radius-medium); /* More rounded */
  transition: border-color var(--transition-fast),
    box-shadow var(--transition-fast), background-color var(--transition-fast);
  font-size: 1rem;
  background-color: var(--bg-input);
  color: var(--text-dark);
  line-height: 1.6; /* Increase line-height */
  outline: none; /* Remove default outline */
  box-shadow: var(--shadow-inset); /* Add subtle inset shadow */
}
.form-group textarea {
  resize: vertical;
  min-height: 120px;
}

/* More complex focus state */
.form-group input:not([type="radio"]):not([type="checkbox"]):focus,
.form-group textarea:focus,
.form-group select:focus,
.form-input:focus {
  border-color: var(--border-color-focus);
  background-color: #fff; /* Ensure white background on focus */
  box-shadow: 0 0 0 4px rgba(var(--secondary-color-rgb), 0.1),
    /* Glow ring */ var(--shadow-inset); /* Keep inset shadow */
}
/* Placeholder style */
.form-group input::placeholder,
.form-group textarea::placeholder {
  color: var(--text-placeholder);
  opacity: 1;
  transition: opacity var(--transition-fast);
}
.form-group input:focus::placeholder,
.form-group textarea:focus::placeholder {
  opacity: 0.5; /* Dim placeholder on focus */
}

/* --- Dashboard (Upgrade card and layout) --- */
.dashboard-section {
  padding: 60px 20px;
  background: var(--bg-light);
}
.dashboard-header {
  display: flex;
  flex-wrap: wrap; /* Allow wrapping on mobile */
  justify-content: space-between;
  align-items: center;
  max-width: var(--container-width);
  margin: 0 auto 40px;
  gap: 20px;
}
.dashboard-header h2 {
  color: var(--text-dark);
  margin-bottom: 0;
  font-size: 2rem;
}

.vocab-list {
  max-width: var(--container-width);
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(300px, 1fr)
  ); /* Change to auto-fill */
  gap: 30px; /* Increase gap */
}
.vocab-item {
  /* Upgrade vocabulary card */
  background: linear-gradient(135deg, var(--bg-white) 0%, #fdfdff 100%);
  padding: 25px; /* Increase padding */
  border-radius: var(--border-radius-medium);
  box-shadow: var(--shadow-medium); /* Clearer shadow */
  transition: transform var(--transition-smooth),
    box-shadow var(--transition-smooth),
    border-left-color var(--transition-smooth);
  border-left: 5px solid var(--primary-color); /* Add left border */
  position: relative;
  overflow: hidden;
}
.vocab-item::after {
  /* Subtle inner shadow effect */
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100px;
  background: linear-gradient(
    to top,
    rgba(var(--primary-color-rgb), 0.05),
    transparent
  );
  opacity: 0;
  transition: opacity var(--transition-smooth);
  pointer-events: none;
}
.vocab-item:hover {
  transform: translateY(-6px) scale(1.01);
  box-shadow: var(--shadow-dark);
  border-left-color: var(--secondary-color);
}
.vocab-item:hover::after {
  opacity: 1;
}
.vocab-word {
  margin-bottom: 12px;
  color: var(--text-dark);
  font-weight: 700; /* Bolder */
  font-size: 1.25rem; /* Larger */
  font-family: var(--font-heading);
}
.vocab-meaning {
  color: var(--text-muted);
  line-height: 1.6;
}
.no-vocab {
  text-align: center;
  color: var(--text-muted);
  margin-top: 3rem;
  font-size: 1.1rem;
  grid-column: 1 / -1; /* Span full grid width */
  padding: 40px;
  background: rgba(0, 0, 0, 0.02);
  border-radius: var(--border-radius-medium);
}
.filter-bar {
  /* Filter bar for dashboard */
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin-bottom: 30px;
  flex-wrap: wrap;
  max-width: var(--container-width);
  margin-left: auto;
  margin-right: auto;
  gap: 15px; /* Add gap */
}

/* --- Profile Section (Adjustment) --- */
.profile-section,
.profile-view-section {
  padding: 80px 20px;
  background: var(--bg-light);
}
.profile-container,
.profile-view-container {
  max-width: 650px;
  margin: 40px auto;
  background: var(--bg-white);
  padding: 40px 50px; /* Increase horizontal padding */
  border-radius: var(--border-radius-large);
  box-shadow: var(--shadow-medium);
  border: 1px solid var(--border-color-light);
}
.profile-container h2,
.profile-view-container h2 {
  text-align: center;
  margin-bottom: 35px;
  color: var(--text-dark);
  font-size: 1.8rem;
}
.profile-details p,
.profile-view-container p {
  /* profile-details is assumed for the form view */
  margin: 15px 0; /* Increase spacing */
  color: var(--text-dark);
  line-height: 1.8; /* Increase line-height */
  font-size: 1.05rem; /* Slightly larger size */
}
.profile-view-container {
  text-align: center;
}
.profile-view-container p strong {
  color: var(--primary-color);
  margin-right: 8px;
  font-weight: 600;
}
/* Add style for Edit Profile button if present */
.profile-view-container .btn-edit-profile {
  margin-top: 30px;
  /* Use .btn-primary or .btn-secondary style */
  /* Example: */
  /* @extend .btn; */
  /* @extend .btn-primary; */
  /* Or copy relevant styles */
  display: inline-block;
  padding: 12px 30px;
  border-radius: var(--border-radius-pill);
  text-decoration: none;
  transition: all var(--transition-elastic);
  font-family: var(--font-main);
  font-weight: 600;
  cursor: pointer;
  border: none;
  text-align: center;
  line-height: 1.5;
  position: relative;
  overflow: hidden;
  z-index: 1;
  will-change: transform, box-shadow;
  background: linear-gradient(
    45deg,
    var(--primary-color),
    var(--secondary-color)
  );
  color: var(--text-light);
  box-shadow: 0 5px 15px rgba(var(--primary-color-rgb), 0.3),
    0 2px 5px rgba(var(--secondary-color-rgb), 0.2);
}
.profile-view-container .btn-edit-profile:hover {
  transform: translateY(-3px) scale(1.03);
  box-shadow: 0 8px 20px rgba(var(--primary-color-rgb), 0.4),
    0 4px 8px rgba(var(--secondary-color-rgb), 0.3);
}

/* --- Footer (Add details) --- */
.footer {
  background: var(--text-dark);
  color: var(--text-medium);
  text-align: center;
  padding: 40px 20px;
  margin-top: 60px; /* Increase margin */
  border-top: 5px solid var(--primary-color); /* Add top border */
  position: relative;
}
/* Add subtle background effect */
.footer::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
      45deg,
      rgba(var(--primary-color-rgb), 0.1),
      transparent 50%
    ),
    linear-gradient(
      -45deg,
      rgba(var(--secondary-color-rgb), 0.1),
      transparent 50%
    );
  opacity: 0.5;
  z-index: 0;
  pointer-events: none;
}
.footer p {
  margin: 0;
  position: relative; /* Above ::before */
  z-index: 1;
  font-size: 0.95rem;
}
.footer a {
  /* Link in footer */
  color: var(--accent-color); /* Striking yellow color */
  font-weight: 500;
}
.footer a:hover {
  color: var(--text-light);
}
.footer a::after {
  /* Disable default underline for footer links */
  display: none;
}

/* --- ELABORATE LOADING OVERLAY (Artistic Masterpiece) --- */

/* Main overlay covering viewport, with dynamic gradient and blur */
#loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: radial-gradient(
    circle at center,
    rgba(18, 18, 31, 0.95) 0%,
    rgba(18, 18, 31, 0.85) 60%,
    rgba(18, 18, 31, 0.8) 100%
  );
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px); /* Safari */
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  overflow: hidden;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  will-change: opacity; /* Performance hint */
}

/* Layer of floating particles, simulating CSS particles */
#loading-overlay::before {
  content: "";
  position: absolute;
  /* Expand beyond viewport edges to ensure coverage during animation */
  top: -20%;
  left: -20%;
  right: -20%;
  bottom: -20%;
  /* Tiny dots using SVG background */
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"><circle cx="1" cy="1" r="1" fill="rgba(255,255,255,0.08)" /><circle cx="50" cy="50" r="1" fill="rgba(255,255,255,0.05)" /></svg>');
  background-size: 100px 100px; /* Control density */
  animation: overlayParticles 25s linear infinite;
  opacity: 0.4;
  will-change: transform; /* Performance hint */
}

@keyframes overlayParticles {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(100px, 100px);
  } /* Match background-size for seamless loop */
}

/* Complex spinner container with multiple concentric rings */
.spinner-complex {
  position: relative;
  width: 120px;
  height: 120px;
  /* Optional: rotate the whole spinner for diagonal effect */
  /* transform: rotate(45deg); */
}

/* Outer spinning ring */
.spinner-complex .ring-outer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 6px solid transparent;
  border-top-color: rgba(var(--primary-color-rgb), 0.8);
  border-right-color: rgba(var(--secondary-color-rgb), 0.8);
  border-radius: 50%;
  animation: spinOuter 2s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
  will-change: transform; /* Performance hint */
}

@keyframes spinOuter {
  to {
    transform: rotate(360deg);
  }
}

/* Middle dashed ring */
.spinner-complex .ring-middle {
  position: absolute;
  top: 15%;
  left: 15%;
  width: 70%;
  height: 70%;
  border: 4px dashed rgba(var(--accent-color-rgb), 0.7);
  border-radius: 50%;
  animation: spinMiddle 1.4s linear infinite reverse;
  will-change: transform; /* Performance hint */
}

@keyframes spinMiddle {
  to {
    transform: rotate(360deg);
  }
}

/* Inner pulsing core */
.spinner-complex .ring-inner {
  position: absolute;
  top: 30%;
  left: 30%;
  width: 40%;
  height: 40%;
  background: conic-gradient(
    from 0deg,
    rgba(var(--primary-color-rgb), 0.6),
    rgba(var(--secondary-color-rgb), 0.6),
    rgba(var(--accent-color-rgb), 0.6),
    rgba(var(--primary-color-rgb), 0.6)
  );
  border-radius: 50%;
  animation: pulseInner 1.6s ease-in-out infinite;
  will-change: transform, opacity; /* Performance hint */
}

@keyframes pulseInner {
  0%,
  100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(0.6);
    opacity: 0.6;
  }
}

/* Light beam effect sweeping across overlay */
.light-beam {
  position: absolute;
  /* Large enough to cover viewport when rotated */
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    60deg,
    transparent 45%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 55%
  );
  animation: beamMove 4s ease-in-out infinite;
  pointer-events: none;
  will-change: transform; /* Performance hint */
}

@keyframes beamMove {
  0% {
    transform: rotate(0deg) translateX(-25%);
  } /* Start off-screen */
  50% {
    transform: rotate(15deg) translateX(0%);
  } /* Sweep across */
  100% {
    transform: rotate(30deg) translateX(25%);
  } /* End off-screen */
}

/* Artistic loading text label */
#loading-overlay .loading-text {
  position: absolute;
  bottom: 15%; /* Adjusted position */
  font-family: var(--font-heading); /* Use heading font */
  font-size: 1.1rem; /* Slightly smaller */
  letter-spacing: 5px; /* Wider spacing */
  color: rgba(255, 255, 255, 0.8);
  text-transform: uppercase;
  text-shadow: 0 0 10px rgba(var(--primary-color-rgb), 0.6),
    0 0 15px rgba(var(--secondary-color-rgb), 0.6);
  animation: textGlow 2.5s ease-in-out infinite alternate; /* Added alternate */
  will-change: text-shadow; /* Performance hint */
}

@keyframes textGlow {
  from {
    text-shadow: 0 0 10px rgba(var(--primary-color-rgb), 0.6),
      0 0 15px rgba(var(--secondary-color-rgb), 0.6);
  }
  to {
    text-shadow: 0 0 20px rgba(var(--accent-color-rgb), 0.8),
      0 0 30px rgba(var(--accent-color-rgb), 0.6),
      0 0 40px rgba(var(--primary-color-rgb), 0.3);
  } /* More complex glow */
}

#loading-overlay.active {
  opacity: 1;
  pointer-events: auto;
}

/* Card Header */
.card-header {
  padding: 15px 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap; /* Allow wrap if too many badges */
  gap: 8px;
  border-bottom: 1px solid var(--border-color);
  position: relative;
  z-index: 2; /* Above glow */
}

.badges {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
}

.badge {
  padding: 3px 10px;
  font-size: 0.7rem;
  font-weight: 600;
  border-radius: var(--border-radius-pill);
  display: inline-flex;
  align-items: center;
  gap: 4px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border: 1px solid transparent;
  transition: transform var(--transition-snap);
}
.badge:hover {
  transform: scale(1.1); /* Pop effect on hover */
}

.badge .fas {
  /* Icon within badge */
  font-size: 0.8em;
}

.pro-badge {
  background: linear-gradient(
    45deg,
    var(--gold-color-start, #f6d365),
    var(--gold-color-end, #fda085)
  );
  color: #5d4037; /* Dark brown text for contrast */
  border-color: rgba(255, 255, 255, 0.2);
  box-shadow: inset 0 1px 1px rgba(255, 255, 255, 0.3),
    0 1px 2px rgba(0, 0, 0, 0.2);
}

.ai-badge {
  background: linear-gradient(
    45deg,
    #4fc3f7,
    #81d4fa
  ); /* Light blue gradient */
  color: #01579b; /* Dark blue text */
  border-color: rgba(255, 255, 255, 0.3);
}

.category-badge {
  background-color: rgba(var(--secondary-color-rgb), 0.15);
  color: var(--secondary-color);
  border-color: rgba(var(--secondary-color-rgb), 0.3);
}
.type-badge {
  background-color: rgba(var(--accent-color-rgb), 0.15);
  color: var(--accent-color);
  border-color: rgba(var(--accent-color-rgb), 0.3);
}

.lesson-date {
  font-size: 0.8rem;
  color: var(--text-medium);
  white-space: nowrap; /* Prevent date wrapping */
}

/* Card Body */
.card-body {
  padding: 25px 25px 20px; /* Adjust padding */
  flex-grow: 1; /* Allow body to grow and push footer down */
  position: relative;
  z-index: 2; /* Above glow */
}

.lesson-title {
  font-family: var(--font-heading);
  font-size: clamp(1.25rem, 2.5vw, 1.5rem); /* Responsive */
  font-weight: 600;
  color: var(--text-light);
  margin: 0 0 15px 0; /* Space below title */
  line-height: 1.35;
  transition: color var(--transition-swift);
}
.lesson-card-v2:hover .lesson-title {
  color: var(--primary-color); /* Highlight title on card hover */
}

/* Card Footer */
.card-footer {
  padding: 15px 20px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 15px;
  border-top: 1px solid var(--border-color);
  background: rgba(var(--bg-dark-rgb), 0.3); /* Slightly different footer bg */
  position: relative;
  z-index: 2; /* Above glow */
}

.author-info {
  display: flex;
  align-items: center;
  gap: 10px;
  min-width: 0; /* Prevent overflow */
}

.author-avatar {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid rgba(255, 255, 255, 0.1);
  transition: transform var(--transition-snap);
}
.author-info:hover .author-avatar {
  transform: scale(1.1);
}

.author-link {
  font-size: 0.85rem;
  font-weight: 500;
  color: var(--text-medium);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* Handle long usernames */
  transition: color var(--transition-swift);
}
.author-link:hover {
  color: var(--accent-color);
}

.detail-button {
  /* Inherit .btn.btn-secondary styles but customize */
  padding: 8px 18px; /* Slightly smaller */
  font-size: 0.85rem;
  font-weight: 600;
  border-radius: var(--border-radius-pill);
  background-color: rgba(var(--primary-color-rgb), 0.1);
  color: var(--primary-color);
  border: 1px solid rgba(var(--primary-color-rgb), 0.3);
  transition: all var(--transition-swift);
  display: inline-flex;
  align-items: center;
  gap: 6px;
  white-space: nowrap; /* Prevent button text wrapping */
}

.detail-button:hover {
  background-color: var(--primary-color);
  color: var(--bg-dark);
  border-color: var(--primary-color);
  box-shadow: 0 4px 12px -2px rgba(var(--primary-color-rgb), 0.4);
  transform: translateY(-2px) scale(1.03);
}
.detail-button .fas {
  font-size: 0.9em;
  transition: transform 0.3s ease;
}
.detail-button:hover .fas {
  transform: translateX(3px); /* Arrow moves slightly */
}

/* --- No Lessons Message --- */
.no-lessons-message {
  grid-column: 1 / -1; /* Span full grid width */
  text-align: center;
  padding: 60px 20px;
  background: rgba(var(--bg-dark-rgb), 0.3);
  border-radius: var(--border-radius-large);
  border: 1px dashed var(--border-color);
  color: var(--text-medium);
}
.no-lessons-message .fas {
  font-size: 3rem;
  margin-bottom: 20px;
  color: var(--primary-color);
  opacity: 0.5;
}
.no-lessons-message p {
  font-size: 1.1rem;
  margin-bottom: 25px;
}
.no-lessons-message .btn {
  /* Style button within message */
  margin: 0 5px;
}

/* --- Responsive Adjustments for Lessons --- */
@media (max-width: 768px) {
  .lessons-section {
    padding-top: 40px;
  }
  .lessons-section .section-title {
    font-size: 1.8rem;
    margin-bottom: 30px;
  }
  .lessons-filter-bar {
    flex-direction: column;
    align-items: stretch;
    gap: 15px;
    padding: 15px;
  }
  .filter-controls-form {
    justify-content: center;
  } /* Center controls on mobile */
  .lessons-grid {
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
    gap: 25px;
  }
  .lesson-card-v2 {
    border-radius: var(--border-radius-medium);
  }
  .card-header {
    padding: 12px 15px;
  }
  .card-body {
    padding: 20px 20px 15px;
  }
  .lesson-title {
    font-size: 1.2rem;
  }
  .card-footer {
    padding: 12px 15px;
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
  }
  .detail-button {
    align-self: flex-end; /* Push button to right */
  }
  .badge {
    font-size: 0.65rem;
    padding: 3px 8px;
  }
  .author-avatar {
    width: 28px;
    height: 28px;
  }
  .author-link {
    font-size: 0.8rem;
  }
  .no-lessons-message {
    padding: 40px 15px;
  }
  .no-lessons-message .fas {
    font-size: 2.5rem;
  }
  .no-lessons-message p {
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .category-pills,
  .filter-controls-form {
    justify-content: center;
  }
  .filter-search-input {
    min-width: 150px;
  }
  .filter-select-input {
    min-width: 100px;
  }
  .filter-submit-btn {
    width: 100%;
    justify-content: center;
  } /* Full width button */
  .search-input-wrapper,
  .select-wrapper {
    width: calc(50% - 10px);
  } /* Make search/select roughly half width */
}

/* Editors */
#markdownEditor,
#videoEditor,
#quizEditor,
#essayEditor {
  margin-top: 30px;
  display: none;
  animation: editorFadeIn 0.6s var(--transition-smooth) forwards;
}
@keyframes editorFadeIn {
  from {
    opacity: 0;
    transform: translateY(15px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
#markdownEditor.active,
#videoEditor.active,
#quizEditor.active,
#essayEditor.active {
  display: block;
}

#videoEditor {
  padding: 20px;
  background: var(--bg-light);
  border: 1px solid var(--border-color-light);
  border-radius: var(--border-radius-medium);
  box-shadow: var(--shadow-inset);
}
/* Style for video preview/iframe if needed */
#videoPreview,
#videoEditor iframe {
  width: 100%;
  border-radius: var(--border-radius-medium);
  aspect-ratio: 16 / 9;
  border: none;
  box-shadow: var(--shadow-light);
  margin-top: 1rem; /* Space above preview */
  background-color: #eee; /* Placeholder background */
}

/* Quiz Editor (Upgrade) */
#quizEditor {
  background-color: var(--bg-light);
  border: 1px solid var(--border-color-light);
  border-radius: var(--border-radius-large);
  padding: 40px; /* Increase padding */
  margin-top: 30px;
  box-shadow: var(--shadow-light);
}
.quiz-title-editor {
  margin-bottom: 30px;
  color: var(--text-dark);
  font-size: 1.8rem; /* Increase size */
  text-align: center;
  font-family: var(--font-heading);
  border-bottom: 1px dashed var(--border-color-medium);
  padding-bottom: 15px;
}
.quiz-question {
  background: var(--bg-white);
  border: 1px solid var(--border-color-medium); /* Clearer border */
  border-radius: var(--border-radius-medium);
  padding: 25px; /* Increase padding */
  margin-bottom: 30px; /* Increase spacing */
  transition: box-shadow var(--transition-smooth);
  position: relative; /* For remove question button */
}
.quiz-question:hover {
  box-shadow: var(--shadow-medium);
}
/* Example remove question button */
.remove-question-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  color: var(--danger-color);
  font-size: 1.5rem;
  cursor: pointer;
  padding: 5px;
  line-height: 1;
  transition: color var(--transition-fast), transform var(--transition-fast);
  border-radius: 50%; /* Make it round */
}
.remove-question-btn:hover {
  color: var(--danger-color-hover);
  transform: scale(1.1) rotate(15deg); /* Add rotation */
  background-color: rgba(var(--danger-color), 0.05); /* Subtle background */
}

.quiz-question label {
  font-weight: 700; /* Bolder */
  margin-bottom: 10px;
  display: block;
  color: var(--text-dark);
  font-size: 1.1rem;
}
.quiz-question .form-group {
  margin-bottom: 15px;
}

/* Option within Quiz */
@keyframes optionFadeIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
.quiz-option {
  display: flex;
  align-items: center;
  gap: 15px; /* Increase gap */
  margin: 12px 0;
  padding: 15px; /* Increase padding */
  background-color: var(--bg-white);
  border: 1px solid var(--border-color-light);
  border-radius: var(--border-radius-medium);
  animation: optionFadeIn 0.5s ease forwards;
  transition: transform var(--transition-smooth),
    box-shadow var(--transition-smooth), border-color var(--transition-fast);
  position: relative; /* For hover effect */
}
.quiz-option::before {
  /* Background effect on hover */
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    90deg,
    rgba(var(--primary-color-rgb), 0.05),
    transparent
  );
  opacity: 0;
  transition: opacity var(--transition-fast);
  border-radius: inherit;
  z-index: 0;
  pointer-events: none; /* Allow interaction with elements */
}
.quiz-option:hover {
  transform: translateY(-3px) scale(1.01);
  box-shadow: var(--shadow-light);
  border-color: var(--primary-color);
}
.quiz-option:hover::before {
  opacity: 1;
}
.quiz-option > * {
  /* Ensure child elements are above ::before */
  position: relative;
  z-index: 1;
}
/* Custom radio button (if needed, otherwise accent-color works well) */
.quiz-option input.correct-radio {
  flex-shrink: 0;
  width: 20px;
  height: 20px;
  margin: 0;
  padding: 0;
  cursor: pointer;
  accent-color: var(--primary-color); /* Keep accent color or customize */
  /* If using appearance: none; add custom styles here */
  /* Example:
       appearance: none;
       border: 2px solid var(--border-color-medium);
       border-radius: 50%;
       transition: border-color 0.2s, background-color 0.2s;
       position: relative;
    */
}
/* .quiz-option input.correct-radio:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}
.quiz-option input.correct-radio:checked::after {
    content: '';
    position: absolute;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
    width: 8px; height: 8px;
    background-color: white;
    border-radius: 50%;
} */

.quiz-option .option-text {
  /* Text input for option */
  flex: 1;
  font-size: 1rem;
  border: 1px solid var(--border-color-medium);
  border-radius: var(--border-radius-medium);
  padding: 10px 12px;
  outline: none;
  transition: border-color var(--transition-fast),
    box-shadow var(--transition-fast);
  background-color: var(--bg-input);
  color: var(--text-dark);
}
.quiz-option .option-text:focus {
  border-color: var(--border-color-focus);
  box-shadow: 0 0 0 3px rgba(var(--secondary-color-rgb), 0.1);
}
.quiz-option .remove-option-btn {
  /* Remove option button */
  margin-left: auto;
  background: none;
  border: none;
  border-radius: 50%; /* Round */
  padding: 8px;
  font-size: 1.1rem; /* Larger icon */
  color: var(--danger-color);
  cursor: pointer;
  transition: background var(--transition-fast), color var(--transition-fast),
    transform var(--transition-elastic);
  line-height: 1; /* Align icon */
  flex-shrink: 0; /* Prevent shrinking */
}
.quiz-option .remove-option-btn:hover {
  background-color: rgba(var(--danger-color), 0.1);
  color: var(--danger-color-hover);
  transform: rotate(90deg) scale(1.1);
}

/* --- Alert Toasts (Add entry/exit animations) --- */
@keyframes toastInRight {
  from {
    transform: translateX(110%) scale(0.9);
    opacity: 0;
  } /* Added scale */
  to {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
}
@keyframes toastOutRight {
  from {
    transform: translateX(0) scale(1);
    opacity: 1;
  }
  to {
    transform: translateX(110%) scale(0.9);
    opacity: 0;
  } /* Added scale */
}
#alert-container {
  position: fixed;
  top: calc(var(--header-height, 70px) + 20px); /* Use variable */
  right: 20px;
  z-index: 9999;
  display: flex;
  flex-direction: column;
  gap: 15px; /* Increase gap */
  pointer-events: none; /* Only toasts receive events */
  width: max-content; /* Adjust width based on content */
  max-width: 400px; /* Limit max width */
}
.alert-toast {
  display: flex;
  align-items: stretch; /* Stretch icon and content */
  min-width: 320px;
  border-radius: var(--border-radius-medium);
  box-shadow: var(--shadow-dark);
  overflow: hidden; /* For rounding icon area */
  opacity: 0; /* Start hidden */
  animation: toastInRight var(--anim-duration-entry) var(--transition-bouncy)
    forwards;
  pointer-events: auto; /* Allow click/hover */
  position: relative; /* For progress bar */
  background: var(--bg-white); /* Default white background */
  color: var(--text-dark);
  will-change: transform, opacity; /* Performance hint */
}
.alert-toast.exiting {
  /* Class added when toast is about to disappear */
  animation: toastOutRight var(--anim-duration-exit) ease-in forwards;
}
/* Optional progress bar for toast */
.alert-toast::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 4px;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.1);
  /* Animation needs to be controlled by JS by setting --toast-duration */
  animation: toastProgress linear forwards;
  animation-duration: var(--toast-duration, 5s); /* Default duration */
}
@keyframes toastProgress {
  from {
    width: 100%;
  }
  to {
    width: 0%;
  }
}

/* Icon Area */
.toast-icon-area {
  padding: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  width: 60px; /* Fixed width */
}
.toast-icon-area i {
  /* Font Awesome icon */
  font-size: 1.8rem;
}

/* Content Area */
.toast-content {
  padding: 15px 20px 15px 15px;
  flex-grow: 1;
  /* Allow text wrapping */
  word-wrap: break-word;
  overflow-wrap: break-word;
}
.toast-title {
  font-weight: 700;
  margin-bottom: 5px;
  font-size: 1.1rem;
}
.toast-message {
  font-size: 0.95rem;
  line-height: 1.5;
  color: var(--text-muted);
}

/* Close Button */
.toast-close {
  background: none;
  border: none;
  color: var(--text-muted);
  padding: 0 15px;
  cursor: pointer;
  font-size: 1.3rem;
  opacity: 0.7;
  transition: opacity var(--transition-fast), color var(--transition-fast),
    transform var(--transition-fast);
  align-self: flex-start; /* Align to top */
  margin-top: 10px; /* Adjust vertical alignment */
  flex-shrink: 0; /* Prevent shrinking */
}
.toast-close:hover {
  opacity: 1;
  color: var(--text-dark);
  transform: scale(1.1);
}

/* --- Toast Types (Using colors and icons) --- */
/* Success */
.alert-toast.success {
  background: var(--bg-success-light);
  border-left: 5px solid var(--success-color);
}
.alert-toast.success .toast-icon-area {
  background: var(--success-color);
  color: white;
}
.alert-toast.success .toast-title {
  color: var(--success-color-hover);
}
.alert-toast.success::after {
  background-color: var(--success-color);
}
.alert-toast.success .toast-close {
  color: var(--success-color);
}
.alert-toast.success .toast-close:hover {
  color: var(--success-color-hover);
}
.alert-toast.success .toast-icon-area i::before {
  content: "\f058"; /* Example: FontAwesome check-circle */
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
}

/* Error */
.alert-toast.error {
  background: var(--bg-danger-light);
  border-left: 5px solid var(--danger-color);
}
.alert-toast.error .toast-icon-area {
  background: var(--danger-color);
  color: white;
}
.alert-toast.error .toast-title {
  color: var(--danger-color-hover);
}
.alert-toast.error::after {
  background-color: var(--danger-color);
}
.alert-toast.error .toast-close {
  color: var(--danger-color);
}
.alert-toast.error .toast-close:hover {
  color: var(--danger-color-hover);
}
.alert-toast.error .toast-icon-area i::before {
  content: "\f071"; /* Example: FontAwesome exclamation-triangle */
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
}

/* Info */
.alert-toast.info {
  background: #e3f2fd;
  border-left: 5px solid var(--info-color);
}
.alert-toast.info .toast-icon-area {
  background: var(--info-color);
  color: white;
}
.alert-toast.info .toast-title {
  color: #1565c0;
}
.alert-toast.info::after {
  background-color: var(--info-color);
}
.alert-toast.info .toast-close {
  color: var(--info-color);
}
.alert-toast.info .toast-close:hover {
  color: #1565c0;
}
.alert-toast.info .toast-icon-area i::before {
  content: "\f05a"; /* Example: FontAwesome info-circle */
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
}

/* Warning */
.alert-toast.warning {
  background: #fff8e1;
  border-left: 5px solid var(--warning-color);
}
.alert-toast.warning .toast-icon-area {
  background: var(--warning-color);
  color: white;
}
.alert-toast.warning .toast-title {
  color: #e65100;
}
.alert-toast.warning::after {
  background-color: var(--warning-color);
}
.alert-toast.warning .toast-close {
  color: var(--warning-color);
}
.alert-toast.warning .toast-close:hover {
  color: #e65100;
}
.alert-toast.warning .toast-icon-area i::before {
  content: "\f06a"; /* Example: FontAwesome exclamation-circle */
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
}

/* --- Custom Confirm Modal - Elaborate & Complex --- */

/* --- Container Overlay --- */
#customConfirm {
  position: fixed;
  inset: 0; /* top: 0; left: 0; right: 0; bottom: 0; */
  background-color: rgba(
    var(--bg-dark-rgb),
    0.7
  ); /* Dark transparent background */
  backdrop-filter: blur(12px) saturate(150%); /* Strong glassmorphism effect */
  -webkit-backdrop-filter: blur(12px) saturate(150%);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10001; /* Slightly above loading overlay */
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.5s var(--transition-smooth),
    backdrop-filter 0.5s var(--transition-smooth);
  will-change: opacity, backdrop-filter; /* Performance optimization */
}

#customConfirm.active {
  opacity: 1;
  pointer-events: auto;
  /* Subtle overlay animation on entry */
  animation: overlayFadeIn 0.6s var(--transition-smooth) forwards;
}
@keyframes overlayFadeIn {
  from {
    backdrop-filter: blur(0px) saturate(100%);
  }
  to {
    backdrop-filter: blur(12px) saturate(150%);
  }
}

/* --- Modal Box Wrapper --- */
/* Assumes structure: <div id="customConfirm"><div class="confirm-modal-box">...</div></div> */
.confirm-modal-box {
  --modal-bg-start: rgba(
    255,
    255,
    255,
    0.95
  ); /* Slightly transparent white bg */
  --modal-bg-end: rgba(245, 247, 250, 0.9);
  --modal-border-color: rgba(var(--primary-color-rgb), 0.3);
  --modal-glow-color-1: rgba(var(--primary-color-rgb), 0.2);
  --modal-glow-color-2: rgba(var(--secondary-color-rgb), 0.15);

  background: linear-gradient(
    145deg,
    var(--modal-bg-start),
    var(--modal-bg-end)
  );
  color: var(--text-dark);
  padding: 45px 50px; /* Large padding */
  border-radius: var(--border-radius-large); /* Very rounded */
  max-width: 480px; /* Limit width */
  width: calc(100% - 40px); /* Ensure doesn't overflow small screens */
  text-align: center;
  position: relative; /* For pseudo-elements and buttons */
  overflow: hidden; /* Hide overflowing effects */
  box-shadow: 0 15px 45px rgba(0, 0, 0, 0.2),
    /* Main shadow */ 0 0 30px var(--modal-glow-color-1),
    /* Purple/blue glow */ 0 0 50px var(--modal-glow-color-2); /* Subtle pink glow */
  border: 1px solid rgba(255, 255, 255, 0.2); /* Subtle light border */

  /* Entry/exit animation */
  transform: scale(0.8) translateY(30px) rotateX(-15deg); /* Initial state */
  opacity: 0;
  transition: transform 0.6s var(--transition-bouncy), opacity 0.5s ease-out;
  will-change: transform, opacity;
  transform-origin: center center;
}

#customConfirm.active .confirm-modal-box {
  transform: scale(1) translateY(0) rotateX(0deg);
  opacity: 1;
  transition-delay: 0.1s; /* Appear slightly after overlay */
}

/* --- Animated Gradient Border Effect --- */
.confirm-modal-box::before {
  content: "";
  position: absolute;
  inset: -3px; /* Border thickness */
  border-radius: inherit; /* Follow box's border-radius */
  background: conic-gradient(
    from var(--angle, 0deg),
    var(--primary-color),
    var(--secondary-color),
    var(--accent-color),
    var(--secondary-color),
    var(--primary-color)
  );
  filter: blur(8px) opacity(0.8); /* Blur and reduce opacity */
  z-index: -1; /* Below content */
  animation: rotateGradient 8s linear infinite paused; /* Initially paused */
  opacity: 0; /* Initially hidden */
  transition: opacity 0.6s ease-out;
}

#customConfirm.active .confirm-modal-box::before {
  animation-play-state: running; /* Run animation when modal is active */
  opacity: 1; /* Show border when modal is active */
  transition-delay: 0.3s; /* Show after modal stabilizes */
}
/* Note: @property --angle and @keyframes rotateGradient should exist elsewhere or be repeated */

/* --- Optional Noise/Texture Overlay Effect --- */
.confirm-modal-box::after {
  content: "";
  position: absolute;
  inset: 0;
  background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="4" height="4" viewBox="0 0 4 4"%3E%3Cpath d="M1 3h1v1H1V3zm2-2h1v1H3V1z" fill="%23000000" fill-opacity=".03"%3E%3C/path%3E%3C/svg%3E'); /* Inline SVG noise */
  opacity: 0.5;
  pointer-events: none;
  z-index: 0; /* Above background but below text */
}

/* --- Message Content --- */
#customConfirmMessage {
  font-size: 1.2rem; /* Larger size */
  line-height: 1.7;
  margin-bottom: 35px; /* Increase bottom spacing */
  color: var(--text-dark); /* Ensure contrast */
  font-weight: 500; /* Slightly bolder */
  font-family: var(--font-main);
  /* Optional text entry animation (can be triggered by JS adding a class) */
  /* opacity: 0; */
  /* transform: translateY(10px); */
  /* transition: opacity 0.4s ease-out 0.4s, transform 0.4s ease-out 0.4s; */
}
/* #customConfirm.active #customConfirmMessage {
  opacity: 1;
  transform: translateY(0);
} */

/* --- Button Container --- */
.confirm-buttons {
  display: flex;
  justify-content: center; /* Or space-evenly, flex-end */
  gap: 20px; /* Spacing between buttons */
  margin-top: 30px;
}

/* --- Styling for OK and Cancel Buttons --- */
#customConfirmOk,
#customConfirmCancel {
  /* Inherit base .btn styles */
  display: inline-block;
  padding: 12px 35px; /* Increase padding */
  border-radius: var(--border-radius-pill);
  text-decoration: none;
  transition: all var(--transition-elastic); /* Use elastic default */
  font-family: var(--font-main);
  font-weight: 700; /* Bolder */
  cursor: pointer;
  border: none;
  text-align: center;
  line-height: 1.5;
  position: relative;
  overflow: hidden;
  z-index: 1;
  will-change: transform, box-shadow;
  font-size: 1rem;
  letter-spacing: 0.5px;
}

/* OK (Confirm) Button - Similar to btn-primary/btn-success but customizable */
#customConfirmOk {
  background: linear-gradient(45deg, var(--success-color), #66bb6a); /* Green */
  color: var(--text-light);
  box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3),
    0 2px 5px rgba(102, 187, 106, 0.2);
}
#customConfirmOk::before {
  /* Light sweep effect */
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  transform: skewX(-25deg);
  transition: left var(--transition-smooth);
}
#customConfirmOk:hover {
  transform: translateY(-4px) scale(1.05); /* Lift higher */
  box-shadow: 0 8px 20px rgba(76, 175, 80, 0.4),
    0 4px 8px rgba(102, 187, 106, 0.3), 0 0 15px rgba(76, 175, 80, 0.2); /* Add subtle glow */
}
#customConfirmOk:hover::before {
  left: 120%;
}
#customConfirmOk:active {
  transform: translateY(0px) scale(1); /* Clearer push down */
  filter: brightness(0.9);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15); /* Inset shadow on press */
}

/* Cancel Button - Similar to btn-secondary or light btn-danger */
#customConfirmCancel {
  background-color: var(--bg-white);
  color: var(--text-muted); /* Grey color */
  border: 2px solid var(--border-color-light);
  box-shadow: var(--shadow-light);
}
#customConfirmCancel:hover {
  background-color: var(--bg-hover-light);
  border-color: var(--text-muted); /* Clearer border on hover */
  color: var(--text-dark);
  transform: scale(1.03) translateY(-2px);
  box-shadow: var(--shadow-medium);
}
#customConfirmCancel:active {
  transform: translateY(0px) scale(1);
  background-color: #eee; /* Darken slightly on press */
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Optional: Add icons to buttons using ::after */
/* Ensure Font Awesome or similar is included */
/* #customConfirmOk::after {
  content: ' \f00c'; // Checkmark
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  margin-left: 8px;
}
#customConfirmCancel::after {
  content: ' \f00d'; // Times (X)
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  margin-left: 8px;
} */

/* === Artistic Achievement Notification CSS === */

/* Main Notification Container */
.achievement-masterpiece {
  position: fixed;
  bottom: 30px; /* Position bottom right */
  right: 30px;
  z-index: 10005; /* Very high z-index */
  width: 100%;
  max-width: 400px; /* Max width */
  border-radius: 15px; /* Generous rounding */
  overflow: hidden; /* Contain internal elements */
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5), 0 0 0 1px rgba(255, 255, 255, 0.1); /* Shadow + subtle border */
  border: 1px solid transparent; /* Placeholder for gradient border */
  /* Initial state for animation (set by JS too) */
  opacity: 0;
  visibility: hidden;
  transform: translateY(100%) scale(0.9); /* Start below and scaled down */
  /* Will change for performance */
  will-change: transform, opacity;
  display: none; /* Initially hidden, JS sets to block */
}

/* Background Glow Effect */
.notification-background-glow {
  position: absolute;
  inset: -50%; /* Extend far out */
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(var(--primary-color-rgb), 0.2) 0%,
    transparent 60%
  );
  filter: blur(50px);
  animation: notificationGlowPulse 5s infinite ease-in-out alternate;
  opacity: 0.7; /* Control glow intensity */
  z-index: 0;
}
@keyframes notificationGlowPulse {
  from {
    transform: scale(0.9);
    opacity: 0.5;
  }
  to {
    transform: scale(1.1);
    opacity: 0.8;
  }
}

/* Particle Canvas Container */
.notification-particle-canvas {
  position: absolute;
  inset: 0;
  z-index: 1; /* Above glow, below content */
  pointer-events: none;
}
.notification-particle-canvas canvas {
  /* Target injected canvas */
  position: absolute !important; /* Override tsparticles */
  inset: 0 !important;
  width: 100% !important;
  height: 100% !important;
}

/* Content Wrapper */
.achievement-content {
  position: relative; /* Above particles and glow */
  z-index: 2;
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 25px 30px; /* Generous padding */
  /* Glassmorphism Background */
  background: rgba(var(--bg-dark-rgb), 0.75);
  backdrop-filter: blur(12px) saturate(150%);
  -webkit-backdrop-filter: blur(12px) saturate(150%);
  border-radius: inherit; /* Match parent rounding */
}

/* Icon Styling */
.achievement-icon-wrapper {
  flex-shrink: 0;
  perspective: 400px; /* For 3D rotation */
}
.achievement-main-icon {
  width: 60px;
  height: 60px;
  display: block;
  object-fit: contain;
  filter: drop-shadow(0 5px 10px rgba(0, 0, 0, 0.4));
  /* Initial state set by JS animation */
}
.achievement-main-icon.trophy {
  /* Specific styles if needed */
  filter: drop-shadow(0 5px 10px rgba(var(--accent-color-rgb), 0.5));
}

/* Text Content Styling */
.achievement-text-content {
  flex-grow: 1;
  min-width: 0; /* Prevent overflow */
}

.achievement-announcement {
  font-size: 0.75rem;
  font-weight: 600;
  color: var(--primary-color);
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-bottom: 8px;
  opacity: 0.9;
}

.achievement-main-title {
  font-size: 1.25rem;
  font-weight: 700;
  color: var(--text-light);
  margin-bottom: 8px;
  line-height: 1.3;
  word-break: break-word; /* Break long titles */
}

.achievement-main-description {
  font-size: 0.9rem;
  color: var(--text-medium);
  line-height: 1.5;
  word-break: break-word;
}

/* Character Animation Styles (from JS wrapCharacters) */
.char-anim {
  display: inline-block;
  opacity: 0;
  transform: translateY(8px) scale(0.8) rotateX(-45deg);
  transform-origin: bottom;
  animation: charFadeSlideUp 0.6s forwards cubic-bezier(0.25, 0.8, 0.25, 1);
  animation-delay: var(--char-delay, 0s); /* Use delay from inline style */
}
@keyframes charFadeSlideUp {
  to {
    opacity: 1;
    transform: translateY(0) scale(1) rotateX(0deg);
  }
}
.line-anim {
  /* For line-by-line reveal */
  display: block; /* Treat each line as block */
  opacity: 0;
  transform: translateY(10px);
  animation: charFadeSlideUp 0.6s forwards cubic-bezier(0.25, 0.8, 0.25, 1);
  animation-delay: var(--char-delay, 0s); /* Use delay from inline style */
}

.char-highlight {
  /* Style for highlighted numbers */
  color: var(--accent-color);
  font-weight: bold;
  text-shadow: 0 0 5px rgba(var(--accent-color-rgb), 0.5);
}

/* Close Button */
.achievement-close-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 28px;
  height: 28px;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  border-radius: 50%;
  color: var(--text-medium);
  font-size: 1.1rem;
  line-height: 1;
  cursor: pointer;
  transition: background-color 0.2s ease, color 0.2s ease, transform 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 3; /* Above content */
}
.achievement-close-btn:hover {
  background: rgba(255, 255, 255, 0.2);
  color: var(--text-light);
  transform: scale(1.1) rotate(90deg);
}

/* === Artistic Tree Level Up Notification CSS === */

.tree-level-up-notification {
  position: fixed;
  bottom: 30px;
  left: 50%; /* Centered */
  transform: translateX(-50%); /* Center horizontally */
  z-index: 10005;
  width: 100%;
  max-width: 420px; /* Wider notification */
  border-radius: 18px; /* More rounded */
  overflow: hidden;
  box-shadow: 0 10px 45px rgba(0, 0, 0, 0.5);
  border: 1px solid transparent; /* For gradient border effect */
  /* Initial state for GSAP */
  opacity: 0;
  visibility: hidden;
  display: none;
  will-change: transform, opacity;
}

/* Background Glow Effect */
.tree-level-up-notification .notification-background-glow.tree-glow {
  position: absolute;
  inset: -60%;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(var(--success-color-rgb), 0.2) 0%,
    transparent 65%
  ); /* Greenish glow */
  filter: blur(60px);
  animation: notificationGlowPulse 4s infinite ease-in-out alternate;
  opacity: 0.8;
  z-index: 0;
}
/* @keyframes notificationGlowPulse defined previously */

/* Particle Canvas Container */
.tree-level-up-notification .notification-particle-canvas {
  position: absolute;
  inset: 0;
  z-index: 1;
  pointer-events: none;
}
.tree-level-up-notification .notification-particle-canvas canvas {
  position: absolute !important;
  inset: 0 !important;
  width: 100% !important;
  height: 100% !important;
}

/* Content Wrapper */
.tree-level-up-notification .level-up-content {
  position: relative;
  z-index: 2;
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 25px 30px;
  /* Glassmorphism Background */
  background: linear-gradient(
    140deg,
    rgba(30, 35, 60, 0.8),
    rgba(20, 25, 50, 0.9)
  );
  backdrop-filter: blur(10px) saturate(140%);
  -webkit-backdrop-filter: blur(10px) saturate(140%);
  border: 1px solid rgba(var(--success-color-rgb), 0.2); /* Subtle success border */
  border-radius: inherit;
}

/* Icon Styling */
.level-up-icon-container {
  flex-shrink: 0;
  position: relative;
  width: 65px;
  height: 65px;
  background: radial-gradient(
    circle,
    rgba(var(--success-color-rgb), 0.15) 0%,
    transparent 70%
  );
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.level-up-icon {
  font-size: 2.5rem; /* Large icon */
  color: var(--success-color);
  filter: drop-shadow(0 0 10px rgba(var(--success-color-rgb), 0.6));
  position: relative;
  z-index: 1;
}
.level-up-number {
  /* Display level number over icon */
  position: absolute;
  bottom: 0;
  right: 0;
  background: var(--success-color);
  color: var(--bg-dark);
  font-size: 0.9rem;
  font-weight: bold;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid rgba(var(--bg-dark-rgb), 0.5);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  z-index: 2;
}

/* Text Content Styling */
.level-up-text {
  flex-grow: 1;
  min-width: 0;
}
.level-up-title {
  font-size: 1.2rem;
  font-weight: 700;
  color: var(--success-color); /* Green title */
  margin-bottom: 6px;
  line-height: 1.3;
  word-break: break-word;
}
.level-up-description {
  font-size: 0.95rem;
  color: var(--text-light);
  line-height: 1.5;
  word-break: break-word;
}
.level-up-description .char-highlight {
  color: var(--accent-color);
  font-weight: bold;
} /* Highlight numbers */

/* Character Animation Styles */
.level-up-text .char-anim {
  /* Reuse existing styles */
  display: inline-block;
  opacity: 0;
  transform: translateY(10px);
  animation: charFadeUp 0.5s forwards ease-out;
  animation-delay: var(--char-delay, 0s);
}
.level-up-text .line-anim {
  /* Reuse existing styles */
  display: block;
  opacity: 0;
  transform: translateY(10px);
  animation: charFadeUp 0.5s forwards ease-out;
  animation-delay: var(--char-delay, 0s);
}
@keyframes charFadeUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Close Button */
.tree-level-up-notification .achievement-close-btn {
  /* Reuse close button style */
  position: absolute;
  top: 8px;
  right: 8px;
  width: 26px;
  height: 26px;
  background: rgba(255, 255, 255, 0.1);
  color: var(--text-medium);
  /* ... other close button styles ... */
}

/* --- Responsive --- */
@media (max-width: 480px) {
  .tree-level-up-notification {
    right: 10px;
    bottom: 10px;
    max-width: calc(100% - 20px);
  }
  .level-up-content {
    padding: 15px 20px;
    gap: 15px;
  }
  .level-up-icon-container {
    width: 50px;
    height: 50px;
  }
  .level-up-icon {
    font-size: 2rem;
  }
  .level-up-number {
    width: 20px;
    height: 20px;
    font-size: 0.8rem;
    border-width: 1px;
  }
  .level-up-title {
    font-size: 1.1rem;
  }
  .level-up-description {
    font-size: 0.85rem;
  }
  .tree-level-up-notification .achievement-close-btn {
    top: 6px;
    right: 6px;
    width: 22px;
    height: 22px;
    font-size: 1rem;
  }
}

/* --- Responsive --- */
@media (max-width: 480px) {
  .achievement-masterpiece {
    right: 15px;
    bottom: 15px;
    max-width: calc(100% - 30px); /* Adjust width */
    border-radius: 12px;
  }
  .achievement-content {
    padding: 18px 20px;
    gap: 15px;
  }
  .achievement-main-icon {
    width: 45px;
    height: 45px;
  }
  .achievement-announcement {
    font-size: 0.7rem;
    margin-bottom: 5px;
  }
  .achievement-main-title {
    font-size: 1.1rem;
    margin-bottom: 5px;
  }
  .achievement-main-description {
    font-size: 0.85rem;
  }
  .achievement-close-btn {
    top: 8px;
    right: 8px;
    width: 24px;
    height: 24px;
    font-size: 1rem;
  }
}

/* --- Responsive Adjustments --- */
@media (max-width: 768px) {
  h1,
  h2 {
    font-size: calc(1.5rem + 1vw);
  } /* Slightly smaller headings on mobile */
  .container {
    padding: 30px 15px;
  }
  .container h2 {
    font-size: 1.6rem;
    margin-bottom: 1.5rem;
  }
  .hero-grid {
    grid-template-columns: 1fr;
    gap: 20px;
  } /* Stack cards in hero */
  .interactive-card {
    padding: 20px;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }
  .interactive-card:hover {
    transform: translateY(-5px) scale(1.01);
  } /* Less dramatic hover */
  .subjects-grid,
  .lessons-list,
  .vocab-list {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 20px;
  }
  .lesson-content {
    padding: 30px 20px;
  }
  .lesson-container {
    padding: 30px 20px;
    margin: 40px auto;
  }
  .auth-container {
    padding: 40px 30px;
  }
  .confirm-modal-box {
    padding: 30px 25px;
  }
  #customConfirmMessage {
    font-size: 1.1rem;
    margin-bottom: 25px;
  }
  .confirm-buttons {
    gap: 15px;
  }
  #customConfirmOk,
  #customConfirmCancel {
    padding: 10px 25px;
    font-size: 0.9rem;
  }
  #alert-container {
    right: 10px;
    max-width: calc(100% - 20px);
  }
  .alert-toast {
    min-width: auto;
    width: 100%;
  }
  /* 1. Ẩn hoàn toàn con trỏ nghệ thuật */
  #artistic-cursor {
    display: none !important; /* Quan trọng để ghi đè */
    visibility: hidden;
  }
}

@media (max-width: 480px) {
  .btn,
  #customConfirmOk,
  #customConfirmCancel {
    padding: 10px 20px;
    font-size: 0.9rem;
  }
  .hero-title {
    font-size: clamp(2rem, 8vw, 2.8rem);
  }
  .big-text {
    font-size: clamp(4rem, 15vw, 6rem);
  }
  .hero-subtitle {
    font-size: clamp(1rem, 4vw, 1.3rem);
  }
  .lesson-type-selector {
    border-radius: var(--border-radius-medium);
    flex-direction: column;
  } /* Stack tabs */
  .lesson-type-selector .tab-btn {
    border-right: none;
    border-bottom: 1px solid var(--border-color-light);
  }
  .lesson-type-selector .tab-btn:last-child {
    border-bottom: none;
  }
  .quiz-question {
    padding: 20px;
  }
  .quiz-option {
    padding: 12px;
    gap: 10px;
  }
  .confirm-modal-box {
    padding: 25px 20px;
  }
  #customConfirmMessage {
    font-size: 1rem;
  }
  .confirm-buttons {
    flex-direction: column;
    gap: 10px;
  } /* Stack buttons */
  #customConfirmOk,
  #customConfirmCancel {
    width: 100%;
  }
}
